import { __decorate } from "tslib";
import { _GraphInstance, _GraphCollection, graphInvokableFactory, graphPost } from "../graphqueryable.js";
import { defaultPath, getById, addable, updateable, deleteable, hasDelta } from "../decorators.js";
import { body } from "@pnp/queryable/index.js";
/**
 * Todo
 */
let _Todo = class _Todo extends _GraphInstance {
    get lists() {
        return TaskLists(this);
    }
};
_Todo = __decorate([
    defaultPath("todo")
], _Todo);
export { _Todo };
export const Todo = graphInvokableFactory(_Todo);
/**
 * TaskList
 */
let _TaskList = class _TaskList extends _GraphInstance {
    get tasks() {
        return TodoTasks(this);
    }
};
_TaskList = __decorate([
    deleteable(),
    updateable()
], _TaskList);
export { _TaskList };
export const TaskList = graphInvokableFactory(_TaskList);
/**
 * TaskLists
 */
let _TaskLists = class _TaskLists extends _GraphCollection {
};
_TaskLists = __decorate([
    defaultPath("lists"),
    getById(TaskList),
    addable(),
    hasDelta()
], _TaskLists);
export { _TaskLists };
export const TaskLists = graphInvokableFactory(_TaskLists);
/**
 * TodoTask
 */
let _TodoTask = class _TodoTask extends _GraphInstance {
    get attachments() {
        return TodoAttachments(this);
    }
    get checklistItems() {
        return ChecklistItems(this);
    }
    get resources() {
        return LinkedResources(this);
    }
};
_TodoTask = __decorate([
    deleteable(),
    updateable()
], _TodoTask);
export { _TodoTask };
export const TodoTask = graphInvokableFactory(_TodoTask);
/**
 * TodoTasks
 */
let _TodoTasks = class _TodoTasks extends _GraphCollection {
};
_TodoTasks = __decorate([
    defaultPath("tasks"),
    getById(TodoTask),
    addable(),
    hasDelta()
], _TodoTasks);
export { _TodoTasks };
export const TodoTasks = graphInvokableFactory(_TodoTasks);
/**
 * TodoAttachment
 */
let _TodoAttachment = class _TodoAttachment extends _GraphInstance {
    get TodoAttachments() {
        return TodoAttachments(this);
    }
};
_TodoAttachment = __decorate([
    deleteable()
], _TodoAttachment);
export { _TodoAttachment };
export const TodoAttachment = graphInvokableFactory(_TodoAttachment);
/**
 * TodoAttachments
 */
let _TodoAttachments = class _TodoAttachments extends _GraphCollection {
    async add(TodoAttachmentInfo) {
        const postBody = {
            "@odata.type": "#microsoft.graph.taskFileAttachment",
            ...TodoAttachmentInfo,
        };
        return graphPost(this, body(postBody));
    }
};
_TodoAttachments = __decorate([
    defaultPath("attachments"),
    getById(TodoAttachment)
], _TodoAttachments);
export { _TodoAttachments };
export const TodoAttachments = graphInvokableFactory(_TodoAttachments);
/**
 * Checklist
 */
let _ChecklistItem = class _ChecklistItem extends _GraphInstance {
};
_ChecklistItem = __decorate([
    deleteable(),
    updateable()
], _ChecklistItem);
export { _ChecklistItem };
export const ChecklistItem = graphInvokableFactory(_ChecklistItem);
/**
 * ChecklistItems
 */
let _ChecklistItems = class _ChecklistItems extends _GraphCollection {
};
_ChecklistItems = __decorate([
    defaultPath("checklistItems"),
    getById(ChecklistItem),
    addable()
], _ChecklistItems);
export { _ChecklistItems };
export const ChecklistItems = graphInvokableFactory(_ChecklistItems);
/**
 * LinkedResource
 */
let _LinkedResource = class _LinkedResource extends _GraphInstance {
};
_LinkedResource = __decorate([
    deleteable(),
    updateable()
], _LinkedResource);
export { _LinkedResource };
export const LinkedResource = graphInvokableFactory(_LinkedResource);
/**
 * LinkedResources
 */
let _LinkedResources = class _LinkedResources extends _GraphCollection {
};
_LinkedResources = __decorate([
    defaultPath("linkedResources"),
    getById(LinkedResource),
    addable()
], _LinkedResources);
export { _LinkedResources };
export const LinkedResources = graphInvokableFactory(_LinkedResources);
//# sourceMappingURL=types.js.map