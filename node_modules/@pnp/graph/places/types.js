import { __decorate } from "tslib";
import { defaultPath, updateable, getById } from "../decorators.js";
import { _GraphCollection, _GraphInstance, graphInvokableFactory } from "../graphqueryable.js";
/**
 * Place
 */
let _Place = class _Place extends _GraphInstance {
};
_Place = __decorate([
    updateable()
], _Place);
export { _Place };
export const Place = graphInvokableFactory(_Place);
/**
 * Places
 */
let _Places = class _Places extends _GraphInstance {
    /**
     * Gets all rooms in a tenant
     */
    get rooms() {
        return Rooms(this);
    }
    /**
    * Gets all roomLists in a tenant
    */
    get roomLists() {
        return RoomLists(this);
    }
};
_Places = __decorate([
    defaultPath("places"),
    getById(Place)
], _Places);
export { _Places };
export const Places = graphInvokableFactory(_Places);
/**
 * RoomList
 */
export class _RoomList extends _GraphInstance {
    /**
    * Gets all rooms in a roomList
    */
    get rooms() {
        return Rooms(this, "rooms");
    }
}
export const RoomList = graphInvokableFactory(_RoomList);
/**
 * RoomLists
 */
let _RoomLists = class _RoomLists extends _GraphCollection {
};
_RoomLists = __decorate([
    defaultPath("microsoft.graph.roomList"),
    getById(RoomList)
], _RoomLists);
export { _RoomLists };
export const RoomLists = graphInvokableFactory(_RoomLists);
/**
 * Room
 */
export class _Room extends _GraphInstance {
}
export const Room = graphInvokableFactory(_Room);
/**
 * Rooms
 */
let _Rooms = class _Rooms extends _GraphCollection {
};
_Rooms = __decorate([
    defaultPath("microsoft.graph.room"),
    getById(Room)
], _Rooms);
export { _Rooms };
export const Rooms = graphInvokableFactory(_Rooms);
//# sourceMappingURL=types.js.map