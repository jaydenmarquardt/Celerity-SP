import { __decorate } from "tslib";
import { _GraphInstance, _GraphCollection, graphInvokableFactory, graphGet, GraphQueryable } from "../graphqueryable.js";
import { defaultPath, getById, addable, updateable, deleteable } from "../decorators.js";
/**
 * MailboxSettings
 */
let _MailboxSettings = class _MailboxSettings extends _GraphInstance {
    /**
     * Get the automatic replies setting
     *
     */
    async automaticRepliesSetting() {
        return graphGet(GraphQueryable(this, "automaticRepliesSetting"));
    }
    /**
     * Get the mailbox settings date format
     *
     */
    async dateFormat() {
        return graphGet(GraphQueryable(this, "dateFormat"));
    }
    /**
     * Get the delegateMeetingMessageDeliveryOptions settings
     *
     */
    // DOCUMENTED BUT NOT IMPLEMENTED
    // public async delegateMeetingMessageDeliveryOptions(): Promise<string> {
    //     return graphGet(GraphQueryable(this, "delegateMeetingMessageDeliveryOptions"));
    // }
    /**
     * Get the delegateMeetingMessageDeliveryOptions settings
     *
     */
    async language() {
        return graphGet(GraphQueryable(this, "language"));
    }
    /**
     * Get the mailbox settings time format
     *
     */
    async timeFormat() {
        return graphGet(GraphQueryable(this, "timeFormat"));
    }
    /**
     * Get the mailbox settings time format
     *
     */
    async timeZone() {
        return graphGet(GraphQueryable(this, "timeZone"));
    }
    /**
     * Get the mailbox settings working hours
     *
     */
    async workingHours() {
        return graphGet(GraphQueryable(this, "workingHours"));
    }
    /**
     * Get the mailbox settings user purpose
     *
     */
    async userPurpose() {
        return graphGet(GraphQueryable(this, "userPurpose"));
    }
};
_MailboxSettings = __decorate([
    defaultPath("mailboxSettings"),
    updateable()
], _MailboxSettings);
export { _MailboxSettings };
export const MailboxSettings = graphInvokableFactory(_MailboxSettings);
/**
 * Focused Inbox Override
 */
let _FocusedInboxOverride = class _FocusedInboxOverride extends _GraphInstance {
};
_FocusedInboxOverride = __decorate([
    defaultPath("inferenceClassification/overrides"),
    updateable(),
    deleteable()
], _FocusedInboxOverride);
export { _FocusedInboxOverride };
export const FocusedInboxOverride = graphInvokableFactory(_FocusedInboxOverride);
/**
 * Focused Inbox Overrides
 */
let _FocusedInboxOverrides = class _FocusedInboxOverrides extends _GraphCollection {
};
_FocusedInboxOverrides = __decorate([
    defaultPath("inferenceClassification/overrides"),
    getById(FocusedInboxOverride),
    addable()
], _FocusedInboxOverrides);
export { _FocusedInboxOverrides };
export const FocusedInboxOverrides = graphInvokableFactory(_FocusedInboxOverrides);
//# sourceMappingURL=mailbox.js.map