import { __decorate } from "tslib";
import { _GraphCollection, graphInvokableFactory, _GraphInstance, graphGet, _GraphQueryable, GraphQueryable } from "../graphqueryable.js";
import { addable, defaultPath, getById, updateable } from "../decorators.js";
import { BlobParse } from "@pnp/queryable/index.js";
/**
 * Compliance
 */
let _Compliance = class _Compliance extends _GraphQueryable {
    /**
     * Get subject rights requests
     *
     */
    get subjectRightsRequests() {
        return SubjectRightsRequests(this);
    }
};
_Compliance = __decorate([
    defaultPath("security")
], _Compliance);
export { _Compliance };
export const Compliance = graphInvokableFactory(_Compliance);
/**
 * SubjectRightsRequest
 */
let _SubjectRightsRequest = class _SubjectRightsRequest extends _GraphInstance {
    /**
    * Get the final report for a subject rights request as a Blob
    */
    async finalReport() {
        return graphGet(GraphQueryable(this, "getFinalReport").using(BlobParse()));
    }
    /**
    * Get the final attachment for a subject rights request as a Blob
    */
    async finalAttachment() {
        return graphGet(GraphQueryable(this, "getFinalAttachment").using(BlobParse()));
    }
    /**
    * Get the list of authored notes assoicated with a subject rights request.
    */
    get notes() {
        return Notes(this);
    }
};
_SubjectRightsRequest = __decorate([
    defaultPath("/"),
    updateable()
], _SubjectRightsRequest);
export { _SubjectRightsRequest };
export const SubjectRightsRequest = graphInvokableFactory(_SubjectRightsRequest);
/**
 * SubjectRightsRequests
 */
let _SubjectRightsRequests = class _SubjectRightsRequests extends _GraphCollection {
};
_SubjectRightsRequests = __decorate([
    defaultPath("subjectRightsRequests"),
    getById(SubjectRightsRequest),
    addable()
], _SubjectRightsRequests);
export { _SubjectRightsRequests };
export const SubjectRightsRequests = graphInvokableFactory(_SubjectRightsRequests);
/**
 * Notes
 */
let _Notes = class _Notes extends _GraphCollection {
};
_Notes = __decorate([
    defaultPath("notes"),
    addable()
], _Notes);
export { _Notes };
export const Notes = graphInvokableFactory(_Notes);
//# sourceMappingURL=types.js.map