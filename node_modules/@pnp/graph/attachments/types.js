import { __decorate } from "tslib";
import { body } from "@pnp/queryable";
import { GraphInstance, _GraphCollection, _GraphInstance, graphInvokableFactory, graphPost } from "../graphqueryable.js";
import { defaultPath, deleteable, getById } from "../decorators.js";
import { type } from "../utils/type.js";
/**
 * Attachment
 */
let _Attachment = class _Attachment extends _GraphInstance {
};
_Attachment = __decorate([
    deleteable()
], _Attachment);
export { _Attachment };
export const Attachment = graphInvokableFactory(_Attachment);
/**
 * Attachments
 */
let _Attachments = class _Attachments extends _GraphCollection {
    // TODO: Adding attachments is not implemented correctly. I believe it requires updating the parent item but needs further investigation.
    /**
     * Add attachment to this collection
     *
     * @param attachmentInfo Attachment properties
     * @param bytes File content
     */
    addFile(attachmentInfo, bytes) {
        return graphPost(GraphInstance(this), body(type("#microsoft.graph.fileAttachment", {
            contentBytes: bytes,
            ...attachmentInfo,
        })));
    }
};
_Attachments = __decorate([
    defaultPath("attachments"),
    getById(Attachment)
], _Attachments);
export { _Attachments };
export const Attachments = graphInvokableFactory(_Attachments);
//# sourceMappingURL=types.js.map