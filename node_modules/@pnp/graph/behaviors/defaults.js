import { combine, isUrlAbsolute } from "@pnp/core";
import { InjectHeaders, RejectOnError, ResolveOnData } from "@pnp/queryable";
import { Telemetry } from "./telemetry.js";
import { DEFAULT_GRAPH_URL } from "../index.js";
export function DefaultInit(graphUrl = DEFAULT_GRAPH_URL) {
    if (!isUrlAbsolute(graphUrl)) {
        throw Error("Graph baseUrl must be absolute.");
    }
    return (instance) => {
        instance.using(Telemetry(), RejectOnError(), ResolveOnData());
        instance.on.pre(async (url, init, result) => {
            init.cache = "default";
            init.credentials = "same-origin";
            if (!isUrlAbsolute(url)) {
                url = combine(graphUrl, url);
            }
            return [url, init, result];
        });
        return instance;
    };
}
export function DefaultHeaders() {
    return (instance) => {
        instance
            .using(InjectHeaders({
            "Content-Type": "application/json",
        }));
        return instance;
    };
}
//# sourceMappingURL=defaults.js.map