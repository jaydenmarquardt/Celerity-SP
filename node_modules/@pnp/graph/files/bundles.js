import { __decorate } from "tslib";
import { _GraphInstance, _GraphCollection, graphInvokableFactory, GraphQueryable, graphPost, graphDelete, } from "../graphqueryable.js";
import { defaultPath, getById, deleteable, updateable } from "../decorators.js";
import { body } from "@pnp/queryable";
/**
 * Describes a Bundle instance
 * ONLY SUPPORTED IN PERSONAL ONEDRIVE
 */
let _Bundle = class _Bundle extends _GraphInstance {
    /**
     * Method for adding a drive item to a bundle.
     * @param id - The Id of a DriveItem object to add to the bundle
     * @returns void - 204 if successful
     */
    async addItem(id) {
        return graphPost(this, body({ id }));
    }
    /**
     * Method for removing a drive item from a bundle.
     * @param id - The Id of a DriveItem object to remove from the bundle
     * @returns void - 204 if successful
     */
    async removeItem(id) {
        return graphDelete(GraphQueryable(this, `/children/${id}`));
    }
};
_Bundle = __decorate([
    deleteable(),
    updateable()
], _Bundle);
export { _Bundle };
export const Bundle = graphInvokableFactory(_Bundle);
/**
 * Describes a collection of Bundle objects
 * ONLY SUPPORTED IN PERSONAL ONEDRIVE
 */
let _Bundles = class _Bundles extends _GraphCollection {
    /**
     * Method for creating a new bundle.
     * @param bundleDef - IBundleDef object
     * @returns Microsoft Graph - DriveItem
     */
    async create(bundleDef) {
        return graphPost(this, body(bundleDef));
    }
};
_Bundles = __decorate([
    defaultPath("bundles"),
    getById(Bundle)
], _Bundles);
export { _Bundles };
export const Bundles = graphInvokableFactory(_Bundles);
//# sourceMappingURL=bundles.js.map