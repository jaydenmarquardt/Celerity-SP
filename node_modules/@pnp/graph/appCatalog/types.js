import { __decorate } from "tslib";
import { _GraphCollection, graphInvokableFactory, _GraphInstance, graphPost, graphDelete, graphGet } from "../graphqueryable.js";
import { defaultPath, getById } from "../decorators.js";
import { InjectHeaders } from "@pnp/queryable";
/**
 * AppCatalogs
 */
let _AppCatalog = class _AppCatalog extends _GraphInstance {
    /**
     * Get teams apps in appCatalog
     *
     */
    get teamsApps() {
        return TeamsApps(this);
    }
};
_AppCatalog = __decorate([
    defaultPath("appCatalogs")
], _AppCatalog);
export { _AppCatalog };
export const AppCatalog = graphInvokableFactory(_AppCatalog);
/**
 * AppDefinition
 */
export class _AppDefinition extends _GraphInstance {
    /**
     * Gets bot associated with app
     *
     */
    async bot() {
        return graphGet(AppDefinitions(this, "/bot"));
    }
}
export const AppDefinition = graphInvokableFactory(_AppDefinition);
/**
 * AppDefinitions
 */
let _AppDefinitions = class _AppDefinitions extends _GraphCollection {
};
_AppDefinitions = __decorate([
    defaultPath("appDefinitions"),
    getById(AppDefinition)
], _AppDefinitions);
export { _AppDefinitions };
export const AppDefinitions = graphInvokableFactory(_AppDefinitions);
/**
 * TeamsApp
 */
export class _TeamsApp extends _GraphInstance {
    /**
     * Get app definitions
     *
     */
    get appDefinitions() {
        return AppDefinitions(this);
    }
    /**
     * Deletes a Teams App
     *
     */
    async delete(appDefinitionId) {
        // Un-approved apps must be deleted differently. https://learn.microsoft.com/en-us/graph/api/teamsapp-delete?view=graph-rest-1.0&tabs=http#permissions
        if (appDefinitionId) {
            return graphDelete(AppDefinitions(this, `/${appDefinitionId}`));
        }
        return graphDelete(this);
    }
    /**
     * Updates a Teams App
     *
     * @param zip  zip file of app
     * @param requiresReview This optional query parameter triggers the app review process. Users with admin privileges can submit apps without triggering a review.
     */
    async update(zip, requiresReview = false) {
        const q = AppDefinitions(this, `?$requiresReview=${requiresReview}`);
        q.using(InjectHeaders({
            "Content-Type": "application/zip",
        }));
        return graphPost(q, { body: zip });
    }
}
export const TeamsApp = graphInvokableFactory(_TeamsApp);
/**
 * TeamsApps
 */
let _TeamsApps = class _TeamsApps extends _GraphCollection {
    /**
     * Adds a Teams App
     *
     * @param zip  zip file of app
     * @param requiresReview This optional query parameter triggers the app review process. Users with admin privileges can submit apps without triggering a review.
     *
     */
    async add(zip, requiresReview = false) {
        const q = TeamsApp(this, `?requiresReview=${requiresReview}`);
        q.using(InjectHeaders({
            "Content-Type": "application/zip",
        }));
        return graphPost(q, { body: zip });
    }
};
_TeamsApps = __decorate([
    defaultPath("teamsApps"),
    getById(TeamsApp)
], _TeamsApps);
export { _TeamsApps };
export const TeamsApps = graphInvokableFactory(_TeamsApps);
//# sourceMappingURL=types.js.map