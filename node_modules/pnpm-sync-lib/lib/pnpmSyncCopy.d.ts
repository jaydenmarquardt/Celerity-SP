/**
 * @beta
 */
export interface IPnpmSyncCopyOptions {
    pnpmSyncJsonPath?: string;
    getPackageIncludedFiles: (packagePath: string) => Promise<string[]>;
    forEachAsyncWithConcurrency: <TItem>(iterable: Iterable<TItem>, callback: (item: TItem) => Promise<void>, options: {
        concurrency: number;
    }) => Promise<void>;
    ensureFolder: (folderPath: string) => Promise<void>;
}
/**
 * For each library project that acts as an injected dependency of other consuming projects
 * within a PNPM workspace, this operation should be invoked whenever that library is rebuilt.
 * It will copy the latest build output into the `node_modules` installation folder.
 *
 * @remarks
 * This operation reads the `.npm-sync.json` file which should have been prepared after
 * `pnpm install` by calling the {@link pnpmSyncPrepareAsync} function.
 *
 * @param pnpmSyncJsonPath - optionally customizes the location of the `.pnpm-sync.json` file
 *
 * @beta
 */
export declare function pnpmSyncCopyAsync({ pnpmSyncJsonPath, getPackageIncludedFiles, forEachAsyncWithConcurrency, ensureFolder }: IPnpmSyncCopyOptions): Promise<void>;
//# sourceMappingURL=pnpmSyncCopy.d.ts.map