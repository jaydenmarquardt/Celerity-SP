import type { ILockfile } from './interfaces';
/**
 * @beta
 */
export interface IPnpmSyncPrepareOptions {
    lockfilePath: string;
    storePath: string;
    readPnpmLockfile: (lockfilePath: string, options: {
        ignoreIncompatible: boolean;
    }) => Promise<ILockfile | undefined>;
}
/**
 * For each workspace project has injected dependencies in a PNPM workspace, this API
 * should be invoked to prepare its `pnpm-sync.json` file.  While building projects,
 * that file will be used by {@link pnpmSyncCopyAsync} to recopy the build outputs into
 * injected dependency installation folders under the `node_modules` folder.
 *
 * @param lockfile - the path to the `pnpm-lock.yaml` file
 * @param store - the path to the PNPM store folder
 *
 * @beta
 */
export declare function pnpmSyncPrepareAsync({ lockfilePath, storePath, readPnpmLockfile }: IPnpmSyncPrepareOptions): Promise<void>;
//# sourceMappingURL=pnpmSyncPrepare.d.ts.map