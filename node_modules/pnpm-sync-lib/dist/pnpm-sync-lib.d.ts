/**
 * This package provides an API for automating the actions performed by the
 * {@link https://www.npmjs.com/package/pnpm-sync | pnpm-sync package}.
 *
 * @packageDocumentation
 */

/**
 * @beta
 */
export declare interface IDependencyMeta {
    injected?: boolean;
}

/**
 * An abstraction of the pnpm lockfile
 *
 * @beta
 */
export declare interface ILockfile {
    importers: Record<string, ILockfileImporter>;
}

/**
 * @beta
 */
export declare interface ILockfileImporter {
    dependencies?: Record<string, IVersionSpecifier>;
    devDependencies?: Record<string, IVersionSpecifier>;
    optionalDependencies?: Record<string, IVersionSpecifier>;
    dependenciesMeta?: Record<string, IDependencyMeta>;
}

/**
 * @beta
 */
export declare interface IPnpmSyncCopyOptions {
    pnpmSyncJsonPath?: string;
    getPackageIncludedFiles: (packagePath: string) => Promise<string[]>;
    forEachAsyncWithConcurrency: <TItem>(iterable: Iterable<TItem>, callback: (item: TItem) => Promise<void>, options: {
        concurrency: number;
    }) => Promise<void>;
    ensureFolder: (folderPath: string) => Promise<void>;
}

/**
 * @beta
 */
export declare interface IPnpmSyncPrepareOptions {
    lockfilePath: string;
    storePath: string;
    readPnpmLockfile: (lockfilePath: string, options: {
        ignoreIncompatible: boolean;
    }) => Promise<ILockfile | undefined>;
}

/**
 * @beta
 */
export declare type IVersionSpecifier = string | {
    version: string;
};

/**
 * For each library project that acts as an injected dependency of other consuming projects
 * within a PNPM workspace, this operation should be invoked whenever that library is rebuilt.
 * It will copy the latest build output into the `node_modules` installation folder.
 *
 * @remarks
 * This operation reads the `.npm-sync.json` file which should have been prepared after
 * `pnpm install` by calling the {@link pnpmSyncPrepareAsync} function.
 *
 * @param pnpmSyncJsonPath - optionally customizes the location of the `.pnpm-sync.json` file
 *
 * @beta
 */
export declare function pnpmSyncCopyAsync({ pnpmSyncJsonPath, getPackageIncludedFiles, forEachAsyncWithConcurrency, ensureFolder }: IPnpmSyncCopyOptions): Promise<void>;

/**
 * For each workspace project has injected dependencies in a PNPM workspace, this API
 * should be invoked to prepare its `pnpm-sync.json` file.  While building projects,
 * that file will be used by {@link pnpmSyncCopyAsync} to recopy the build outputs into
 * injected dependency installation folders under the `node_modules` folder.
 *
 * @param lockfile - the path to the `pnpm-lock.yaml` file
 * @param store - the path to the PNPM store folder
 *
 * @beta
 */
export declare function pnpmSyncPrepareAsync({ lockfilePath, storePath, readPnpmLockfile }: IPnpmSyncPrepareOptions): Promise<void>;

export { }
