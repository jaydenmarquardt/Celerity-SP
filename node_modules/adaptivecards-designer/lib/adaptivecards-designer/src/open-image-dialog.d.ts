import { Dialog } from "./dialog";
export declare class FetchManager {
    private pic2cardService;
    private headers;
    getSampleImages(): Promise<any>;
    getPredictedData(imageContent: any, isTemplateBindingEnabled: any): Promise<any>;
}
export declare class OpenImageDialog extends Dialog {
    private _renderedElement;
    private _imageElement;
    private _buttonContainer;
    private _inputTemplate;
    private _uploadedImage;
    private _predictedCardJSON;
    private fetchManager;
    private isTemplateOptionChecked;
    private allowedImageSize;
    constructor();
    private setContent;
    private removeContent;
    private renderTitle;
    private renderTitleContent;
    private renderUploadedImage;
    private renderUploadButton;
    private renderCheckbox;
    private renderLabelText;
    private checkFileSize;
    private createFileButton;
    private generateErrorText;
    private onCardFailure;
    createActionButton(): HTMLElement;
    private loadSpinner;
    private renderImage;
    private renderUploadControl;
    private renderUploadContainer;
    private renderImageContainer;
    private renderSampleTemplate;
    protected renderContent(): HTMLElement;
    get predictedCardJSON(): predictedCardJSON;
}
export declare class ImageItem {
    readonly template: string;
    readonly itemIndex: number;
    constructor(template: string, itemIndex: number);
    onClick: (template: string, sampleImageName: string) => void;
    render(): HTMLElement;
}
export interface predictedCardJSON {
    card: {};
    data: {};
}
