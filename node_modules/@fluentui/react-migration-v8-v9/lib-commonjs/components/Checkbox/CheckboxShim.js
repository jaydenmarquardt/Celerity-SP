"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "CheckboxShim", {
    enumerable: true,
    get: function() {
        return CheckboxShim;
    }
});
const _interop_require_wildcard = require("@swc/helpers/_/_interop_require_wildcard");
const _react = /*#__PURE__*/ _interop_require_wildcard._(require("react"));
const _react1 = require("@fluentui/react");
const _reactcomponents = require("@fluentui/react-components");
const _shimCheckboxProps = require("./shimCheckboxProps");
const _Checkboxstyles = require("./Checkbox.styles");
const getClassNames = (0, _react1.classNamesFunction)({
    useStaticStyles: false
});
const CheckboxShim = /*#__PURE__*/ _react.forwardRef((props, _ref)=>{
    'use no memo';
    const { className, styles: stylesV8, onRenderLabel, label, componentRef } = props;
    const shimProps = (0, _shimCheckboxProps.useCheckboxProps)(props);
    const styles = getClassNames(stylesV8);
    const stylesV9 = (0, _Checkboxstyles.useCheckboxStyles)();
    const checkboxRef = _ref || /*#__PURE__*/ _react.createRef();
    _react.useImperativeHandle(componentRef, ()=>{
        var _checkboxRef_current, _checkboxRef_current1;
        var _checkboxRef_current_checked, _checkboxRef_current_indeterminate;
        return {
            checked: (_checkboxRef_current_checked = (_checkboxRef_current = checkboxRef.current) === null || _checkboxRef_current === void 0 ? void 0 : _checkboxRef_current.checked) !== null && _checkboxRef_current_checked !== void 0 ? _checkboxRef_current_checked : false,
            indeterminate: (_checkboxRef_current_indeterminate = (_checkboxRef_current1 = checkboxRef.current) === null || _checkboxRef_current1 === void 0 ? void 0 : _checkboxRef_current1.indeterminate) !== null && _checkboxRef_current_indeterminate !== void 0 ? _checkboxRef_current_indeterminate : false,
            focus: ()=>{
                var _checkboxRef_current;
                return (_checkboxRef_current = checkboxRef.current) === null || _checkboxRef_current === void 0 ? void 0 : _checkboxRef_current.focus();
            }
        };
    });
    const defaultLabelRenderer = (checkboxProps)=>{
        if (!checkboxProps) {
            return null;
        }
        const { label: defaultLabel, title } = checkboxProps;
        return defaultLabel ? /*#__PURE__*/ _react.createElement("span", {
            title: title,
            className: styles.text
        }, defaultLabel) : null;
    };
    if (label || onRenderLabel) {
        shimProps.label = {
            className: (0, _reactcomponents.mergeClasses)('ms-Checkbox-text', styles.label, styles.text),
            children: onRenderLabel ? onRenderLabel(props, defaultLabelRenderer) : label
        };
    }
    return /*#__PURE__*/ _react.createElement(_reactcomponents.Checkbox, {
        ...shimProps,
        ref: checkboxRef,
        className: (0, _reactcomponents.mergeClasses)(stylesV9.root, 'ms-Checkbox', className, styles.root),
        indicator: {
            className: (0, _reactcomponents.mergeClasses)('ms-Checkbox-checkbox', styles.checkbox)
        }
    });
});
CheckboxShim.displayName = 'CheckboxShim';
