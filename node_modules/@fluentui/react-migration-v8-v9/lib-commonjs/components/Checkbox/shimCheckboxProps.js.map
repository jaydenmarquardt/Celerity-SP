{"version":3,"sources":["shimCheckboxProps.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { ICheckboxProps } from '@fluentui/react';\nimport { CheckboxProps, CheckboxOnChangeData } from '@fluentui/react-components';\nimport { useControllableValue } from '@fluentui/react-hooks';\nimport { getHTMLAttributes } from '../utils';\n\n// https://react.fluentui.dev/?path=/docs/concepts-migration-from-v8-components-checkbox-migration--page [Link of the fluent v9 migration guide]\n// https://github.com/microsoft/fluentui/blob/master/packages/react/src/components/Checkbox/Checkbox.types.ts [Link of the fluent v8 checkbox types definition]\n// https://github.com/microsoft/fluentui/blob/103b8977f8d5f8dd8c430bab46ff5308a2c76371/packages/react-components/react-checkbox/src/components/Checkbox/Checkbox.types.ts [Link of the fluent v9 checkbox types definition]\n\nconst CHECKBOX_PROPS_V8: Set<string> = new Set([\n  'ariaDescribedBy',\n  'ariaLabel',\n  'ariaLabelledBy',\n  'ariaPositionInSet',\n  'ariaSetSize',\n  'boxSide',\n  'checked',\n  'checkmarkIconProps', // one case used this\n  'className',\n  'componentRef',\n  'defaultChecked',\n  'defaultIndeterminate',\n  'disabled',\n  'indeterminate',\n  'inputProps',\n  'label',\n  'name',\n  'onChange',\n  'onRenderLabel',\n  'required',\n  'styles',\n  'theme',\n  'title',\n]);\n\nexport const useCheckboxProps = (props: ICheckboxProps): CheckboxProps => {\n  const {\n    ariaDescribedBy,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaPositionInSet,\n    ariaSetSize,\n    boxSide,\n    checked: checkedV8,\n    indeterminate,\n    defaultChecked,\n    defaultIndeterminate,\n    disabled,\n    inputProps,\n    name,\n    required,\n    title,\n    onChange: onChangeV8,\n  } = props;\n\n  const [checked, setChecked] = useControllableValue(checkedV8, defaultChecked);\n  const [mixed, setMixed] = React.useState(indeterminate || defaultIndeterminate);\n\n  const onChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLElement>, data: CheckboxOnChangeData): void => {\n      let val: boolean | undefined = checked !== undefined ? (data.checked as boolean) : undefined;\n      // Ensure the checkbox is controlled\n      if (checked !== undefined) {\n        if (mixed) {\n          val = checkedV8 !== undefined ? checkedV8 : defaultChecked !== undefined ? defaultChecked : val;\n        }\n      }\n\n      if (mixed) {\n        setMixed(mixed && !indeterminate ? false : mixed);\n      }\n\n      setChecked(val);\n      onChangeV8?.(event, data.checked as boolean);\n    },\n    [setChecked, checked, onChangeV8, mixed, indeterminate, checkedV8, defaultChecked],\n  );\n\n  const v9Props: Partial<CheckboxProps> = {\n    checked: mixed ? 'mixed' : checked,\n    defaultChecked: mixed ? 'mixed' : defaultChecked,\n    labelPosition: boxSide === 'end' ? 'before' : 'after',\n    disabled,\n    required,\n    title,\n    name,\n    onChange,\n  };\n\n  return {\n    ...inputProps, // This inputProps is specific for the input element, and the html attributes are also used here instead of props.\n    'aria-describedby': ariaDescribedBy,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    'aria-posinset': ariaPositionInSet,\n    'aria-setsize': ariaSetSize,\n    ...v9Props,\n    ...getHTMLAttributes(props, CHECKBOX_PROPS_V8),\n  } as CheckboxProps;\n};\n"],"names":["useCheckboxProps","CHECKBOX_PROPS_V8","Set","props","ariaDescribedBy","ariaLabel","ariaLabelledBy","ariaPositionInSet","ariaSetSize","boxSide","checked","checkedV8","indeterminate","defaultChecked","defaultIndeterminate","disabled","inputProps","name","required","title","onChange","onChangeV8","setChecked","useControllableValue","mixed","setMixed","React","useState","useCallback","event","data","val","undefined","v9Props","labelPosition","getHTMLAttributes"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAqCaA;;;eAAAA;;;;iEArCU;4BAIc;uBACH;AAElC,gJAAgJ;AAChJ,+JAA+J;AAC/J,2NAA2N;AAE3N,MAAMC,oBAAiC,IAAIC,IAAI;IAC7C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAMF,mBAAmB,CAACG;IAC/B,MAAM,EACJC,eAAe,EACfC,SAAS,EACTC,cAAc,EACdC,iBAAiB,EACjBC,WAAW,EACXC,OAAO,EACPC,SAASC,SAAS,EAClBC,aAAa,EACbC,cAAc,EACdC,oBAAoB,EACpBC,QAAQ,EACRC,UAAU,EACVC,IAAI,EACJC,QAAQ,EACRC,KAAK,EACLC,UAAUC,UAAU,EACrB,GAAGlB;IAEJ,MAAM,CAACO,SAASY,WAAW,GAAGC,IAAAA,gCAAAA,EAAqBZ,WAAWE;IAC9D,MAAM,CAACW,OAAOC,SAAS,GAAGC,OAAMC,QAAQ,CAACf,iBAAiBE;IAE1D,MAAMM,WAAWM,OAAME,WAAW,CAChC,CAACC,OAAuCC;QACtC,IAAIC,MAA2BrB,YAAYsB,YAAaF,KAAKpB,OAAO,GAAesB;QACnF,oCAAoC;QACpC,IAAItB,YAAYsB,WAAW;YACzB,IAAIR,OAAO;gBACTO,MAAMpB,cAAcqB,YAAYrB,YAAYE,mBAAmBmB,YAAYnB,iBAAiBkB;YAC9F;QACF;QAEA,IAAIP,OAAO;YACTC,SAASD,SAAS,CAACZ,gBAAgB,QAAQY;QAC7C;QAEAF,WAAWS;QACXV,eAAAA,QAAAA,eAAAA,KAAAA,IAAAA,KAAAA,IAAAA,WAAaQ,OAAOC,KAAKpB,OAAO;IAClC,GACA;QAACY;QAAYZ;QAASW;QAAYG;QAAOZ;QAAeD;QAAWE;KAAe;IAGpF,MAAMoB,UAAkC;QACtCvB,SAASc,QAAQ,UAAUd;QAC3BG,gBAAgBW,QAAQ,UAAUX;QAClCqB,eAAezB,YAAY,QAAQ,WAAW;QAC9CM;QACAG;QACAC;QACAF;QACAG;IACF;IAEA,OAAO;QACL,GAAGJ,UAAU;QACb,oBAAoBZ;QACpB,cAAcC;QACd,mBAAmBC;QACnB,iBAAiBC;QACjB,gBAAgBC;QAChB,GAAGyB,OAAO;QACV,GAAGE,IAAAA,wBAAAA,EAAkBhC,OAAOF,kBAAkB;IAChD;AACF"}