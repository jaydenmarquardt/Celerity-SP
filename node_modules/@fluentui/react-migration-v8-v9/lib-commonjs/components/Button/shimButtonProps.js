"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "shimButtonProps", {
    enumerable: true,
    get: function() {
        return shimButtonProps;
    }
});
const _interop_require_wildcard = require("@swc/helpers/_/_interop_require_wildcard");
const _react = /*#__PURE__*/ _interop_require_wildcard._(require("react"));
const _react1 = require("@fluentui/react");
const shimButtonProps = (props)=>{
    //TODO: Icon shim. This still renders the v8 icon.
    const icon = props.onRenderIcon ? props.onRenderIcon(props) : props.iconProps ? /*#__PURE__*/ _react.createElement(_react1.Icon, props.iconProps) : undefined;
    var _props_variantClassName;
    const variantClassName = ((_props_variantClassName = props.variantClassName) !== null && _props_variantClassName !== void 0 ? _props_variantClassName : props.primary) ? 'ms-Button--primary' : 'ms-Button--default';
    const className = [
        props.baseClassName,
        variantClassName,
        props.className
    ].filter(Boolean).join(' ');
    return {
        // spread incoming props to propagate HTML properties not part of IBaseButtonProps
        ...props,
        appearance: props.primary ? 'primary' : undefined,
        className,
        disabled: props.disabled,
        disabledFocusable: props.allowDisabledFocus,
        'aria-hidden': props.ariaHidden,
        'aria-label': props.ariaLabel,
        icon,
        key: props.key || props.uniqueId,
        children: props.onRenderChildren ? props.onRenderChildren(props) : props.onRenderText ? props.onRenderText(props) : props.text || props.children
    };
};
