{"version":3,"sources":["MenuShim.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { ContextualMenuItemType } from '@fluentui/react';\nimport type { IContextualMenuItem } from '@fluentui/react';\nimport {\n  MenuItem,\n  MenuDivider,\n  MenuGroup,\n  MenuGroupHeader,\n  MenuTrigger,\n  Menu,\n  MenuList,\n  MenuPopover,\n  MenuItemCheckbox,\n  MenuDividerProps,\n} from '@fluentui/react-components';\n\nimport { shimMenuHeaderProps, shimMenuItemCheckboxProps, shimMenuItemProps, shimMenuProps } from './shimMenuProps';\n\nexport const MenuItemShim = (props: IContextualMenuItem) => {\n  if (props.itemType === ContextualMenuItemType.Divider) {\n    const shimProps = shimMenuItemProps(props);\n    return <MenuDivider {...(shimProps as MenuDividerProps)} />;\n  }\n\n  if (props.itemType === ContextualMenuItemType.Section) {\n    const shimProps = shimMenuHeaderProps(props);\n    return (\n      <MenuGroup>\n        <MenuGroupHeader>{shimProps.children}</MenuGroupHeader>\n        {/* //TODO: sectionProps handling */}\n        {props.subMenuProps?.items.map(item => (\n          // key is added through item spread\n          // eslint-disable-next-line react/jsx-key\n          <MenuItemShim {...item} />\n        ))}\n      </MenuGroup>\n    );\n  }\n\n  if (props.canCheck) {\n    const shimProps = shimMenuItemCheckboxProps(props);\n    return <MenuItemCheckbox {...shimProps} />;\n  }\n\n  // Nested Menu to handle submenus\n  if (props.subMenuProps?.items && props.subMenuProps.items.length > 0) {\n    const shimmedMenuProps = shimMenuProps(props.subMenuProps);\n    const shimmedItemProps = shimMenuItemProps(props);\n\n    return (\n      <Menu {...shimmedMenuProps}>\n        <MenuTrigger>\n          <MenuItem {...shimmedItemProps} hasSubmenu />\n        </MenuTrigger>\n        <MenuPopover>\n          <MenuList>\n            {props.subMenuProps.items.map(item => (\n              // key is added through item spread\n              // eslint-disable-next-line react/jsx-key\n              <MenuItemShim {...item} />\n            ))}\n          </MenuList>\n        </MenuPopover>\n      </Menu>\n    );\n  }\n\n  const shimProps = shimMenuItemProps(props);\n  return <MenuItem {...shimProps} />;\n};\n"],"names":["React","ContextualMenuItemType","MenuItem","MenuDivider","MenuGroup","MenuGroupHeader","MenuTrigger","Menu","MenuList","MenuPopover","MenuItemCheckbox","shimMenuHeaderProps","shimMenuItemCheckboxProps","shimMenuItemProps","shimMenuProps","MenuItemShim","props","itemType","Divider","shimProps","Section","children","subMenuProps","items","map","item","canCheck","length","shimmedMenuProps","shimmedItemProps","hasSubmenu"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA,YAAYA,WAAW,QAAQ;AAE/B,SAASC,sBAAsB,QAAQ,kBAAkB;AAEzD,SACEC,QAAQ,EACRC,WAAW,EACXC,SAAS,EACTC,eAAe,EACfC,WAAW,EACXC,IAAI,EACJC,QAAQ,EACRC,WAAW,EACXC,gBAAgB,QAEX,6BAA6B;AAEpC,SAASC,mBAAmB,EAAEC,yBAAyB,EAAEC,iBAAiB,EAAEC,aAAa,QAAQ,kBAAkB;AAEnH,OAAO,MAAMC,eAAe,CAACC;QA2BvBA;IA1BJ,IAAIA,MAAMC,QAAQ,KAAKhB,uBAAuBiB,OAAO,EAAE;QACrD,MAAMC,YAAYN,kBAAkBG;QACpC,qBAAO,oBAACb,aAAiBgB;IAC3B;IAEA,IAAIH,MAAMC,QAAQ,KAAKhB,uBAAuBmB,OAAO,EAAE;YAMhDJ;QALL,MAAMG,YAAYR,oBAAoBK;QACtC,qBACE,oBAACZ,+BACC,oBAACC,uBAAiBc,UAAUE,QAAQ,IAEnCL,uBAAAA,MAAMM,YAAY,cAAlBN,2CAAAA,qBAAoBO,KAAK,CAACC,GAAG,CAACC,CAAAA,OAC7B,mCAAmC;YACnC,yCAAyC;0BACzC,oBAACV,cAAiBU;IAI1B;IAEA,IAAIT,MAAMU,QAAQ,EAAE;QAClB,MAAMP,YAAYP,0BAA0BI;QAC5C,qBAAO,oBAACN,kBAAqBS;IAC/B;IAEA,iCAAiC;IACjC,IAAIH,EAAAA,sBAAAA,MAAMM,YAAY,cAAlBN,0CAAAA,oBAAoBO,KAAK,KAAIP,MAAMM,YAAY,CAACC,KAAK,CAACI,MAAM,GAAG,GAAG;QACpE,MAAMC,mBAAmBd,cAAcE,MAAMM,YAAY;QACzD,MAAMO,mBAAmBhB,kBAAkBG;QAE3C,qBACE,oBAACT,MAASqB,gCACR,oBAACtB,iCACC,oBAACJ;YAAU,GAAG2B,gBAAgB;YAAEC,YAAAA;2BAElC,oBAACrB,iCACC,oBAACD,gBACEQ,MAAMM,YAAY,CAACC,KAAK,CAACC,GAAG,CAACC,CAAAA,OAC5B,mCAAmC;YACnC,yCAAyC;0BACzC,oBAACV,cAAiBU;IAM9B;IAEA,MAAMN,YAAYN,kBAAkBG;IACpC,qBAAO,oBAACd,UAAaiB;AACvB,EAAE"}