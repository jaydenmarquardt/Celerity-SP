import * as React from 'react';
import { ContextualMenuItemType } from '@fluentui/react';
import { MenuItem, MenuDivider, MenuGroup, MenuGroupHeader, MenuTrigger, Menu, MenuList, MenuPopover, MenuItemCheckbox } from '@fluentui/react-components';
import { shimMenuHeaderProps, shimMenuItemCheckboxProps, shimMenuItemProps, shimMenuProps } from './shimMenuProps';
export const MenuItemShim = (props)=>{
    var _props_subMenuProps;
    if (props.itemType === ContextualMenuItemType.Divider) {
        const shimProps = shimMenuItemProps(props);
        return /*#__PURE__*/ React.createElement(MenuDivider, shimProps);
    }
    if (props.itemType === ContextualMenuItemType.Section) {
        var _props_subMenuProps1;
        const shimProps = shimMenuHeaderProps(props);
        return /*#__PURE__*/ React.createElement(MenuGroup, null, /*#__PURE__*/ React.createElement(MenuGroupHeader, null, shimProps.children), (_props_subMenuProps1 = props.subMenuProps) === null || _props_subMenuProps1 === void 0 ? void 0 : _props_subMenuProps1.items.map((item)=>// key is added through item spread
            // eslint-disable-next-line react/jsx-key
            /*#__PURE__*/ React.createElement(MenuItemShim, item)));
    }
    if (props.canCheck) {
        const shimProps = shimMenuItemCheckboxProps(props);
        return /*#__PURE__*/ React.createElement(MenuItemCheckbox, shimProps);
    }
    // Nested Menu to handle submenus
    if (((_props_subMenuProps = props.subMenuProps) === null || _props_subMenuProps === void 0 ? void 0 : _props_subMenuProps.items) && props.subMenuProps.items.length > 0) {
        const shimmedMenuProps = shimMenuProps(props.subMenuProps);
        const shimmedItemProps = shimMenuItemProps(props);
        return /*#__PURE__*/ React.createElement(Menu, shimmedMenuProps, /*#__PURE__*/ React.createElement(MenuTrigger, null, /*#__PURE__*/ React.createElement(MenuItem, {
            ...shimmedItemProps,
            hasSubmenu: true
        })), /*#__PURE__*/ React.createElement(MenuPopover, null, /*#__PURE__*/ React.createElement(MenuList, null, props.subMenuProps.items.map((item)=>// key is added through item spread
            // eslint-disable-next-line react/jsx-key
            /*#__PURE__*/ React.createElement(MenuItemShim, item)))));
    }
    const shimProps = shimMenuItemProps(props);
    return /*#__PURE__*/ React.createElement(MenuItem, shimProps);
};
