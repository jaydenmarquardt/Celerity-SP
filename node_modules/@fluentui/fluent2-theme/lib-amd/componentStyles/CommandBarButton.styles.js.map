{"version":3,"file":"CommandBarButton.styles.js","sourceRoot":"../src/","sources":["componentStyles/CommandBarButton.styles.ts"],"names":[],"mappings":";;;;IAEA,SAAgB,yBAAyB,CAAC,KAAmB;QACnD,IAAA,KAAK,GAAK,KAAK,MAAV,CAAW;QAClB,IAAA,KAA8B,KAAM,EAAlC,cAAc,oBAAA,EAAE,OAAO,aAAW,CAAC;QAE3C,IAAM,YAAY,GAAG;YACnB,YAAY,EAAE,CAAC;YACf,oBAAoB,EAAE,OAAO,CAAC,cAAc;YAC5C,uBAAuB,EAAE,OAAO,CAAC,cAAc;SAChD,CAAC;QAEF,IAAM,WAAW,GAAG;YAClB,YAAY,EAAE,CAAC;YACf,mBAAmB,EAAE,OAAO,CAAC,cAAc;YAC3C,sBAAsB,EAAE,OAAO,CAAC,cAAc;SAC/C,CAAC;QAEF,IAAM,uBAAuB,GAAG;YAC9B,MAAM,EAAE,EAAE;YACV,WAAW,EAAE,CAAC;YACd,YAAY,EAAE,CAAC;SAChB,CAAC;QAEF,IAAM,kBAAkB,GAA2B,oBAAoB,CAAC,KAAM,CAAC,CAAC;QAEhF,IAAM,MAAM,uCACV,IAAI,EAAE;gBACJ,eAAe,EAAE,aAAa;gBAC9B,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE,KAAK;gBACd,MAAM,EAAE,SAAS;gBACjB,YAAY,EAAE,OAAO,CAAC,cAAc;gBACpC,2CAA2C,EAAE;oBAC3C,GAAG,EAAE,CAAC;oBACN,KAAK,EAAE,CAAC;oBACR,MAAM,EAAE,CAAC;oBACT,IAAI,EAAE,CAAC;oBACP,OAAO,EAAE,MAAM;oBACf,YAAY,EAAE,OAAO,CAAC,cAAc;oBACpC,MAAM,EAAE,oBAAa,cAAc,CAAC,WAAW,CAAE;iBAClD;aACF,EACD,WAAW,EAAE;gBACX,eAAe,EAAE,aAAa;gBAC9B,0BAA0B,EAAE;oBAC1B,eAAe,EAAE,cAAc,CAAC,uBAAuB;iBACxD;aACF,EACD,WAAW,EAAE;gBACX,eAAe,EAAE,aAAa;gBAC9B,0BAA0B,EAAE;oBAC1B,eAAe,EAAE,cAAc,CAAC,uBAAuB;iBACxD;aACF,EACD,YAAY,EAAE;gBACZ,eAAe,EAAE,aAAa;gBAC9B,KAAK,EAAE,SAAS;gBAChB,0BAA0B,EAAE;oBAC1B,eAAe,EAAE,aAAa;iBAC/B;aACF,EACD,WAAW,EAAE;gBACX,eAAe,EAAE,aAAa;gBAC9B,0BAA0B,EAAE;oBAC1B,eAAe,EAAE,cAAc,CAAC,uBAAuB;iBACxD;aACF,EACD,kBAAkB,EAAE;gBAClB,eAAe,EAAE,aAAa;gBAC9B,0BAA0B,EAAE;oBAC1B,eAAe,EAAE,cAAc,CAAC,8BAA8B;iBAC/D;aACF,EACD,kBAAkB,EAAE;gBAClB,eAAe,EAAE,aAAa;gBAC9B,0BAA0B,EAAE;oBAC1B,eAAe,EAAE,cAAc,CAAC,uBAAuB;iBACxD;aACF,EACD,mBAAmB,EAAE;gBACnB,eAAe,EAAE,aAAa;gBAC9B,0BAA0B,EAAE;oBAC1B,eAAe,EAAE,cAAc,CAAC,uBAAuB;iBACxD;aACF,EACD,aAAa,EAAE;gBACb,MAAM,EAAE,EAAE;gBACV,WAAW,EAAE,CAAC;gBACd,YAAY,EAAE,CAAC;gBACf,YAAY,EAAE,OAAO,CAAC,cAAc;aACrC,EACD,IAAI,EAAE;gBACJ,KAAK,EAAE,SAAS;aACjB,EACD,QAAQ,EAAE;gBACR,KAAK,EAAE,SAAS;gBAChB,QAAQ,EAAE,MAAM;aACjB,EACD,YAAY,EAAE;gBACZ,eAAe,EAAE,aAAa;aAC/B,EACD,aAAa,EAAE;gBACb,MAAM,EAAE,EAAE;aACX,IACE,kBAAkB,KACrB,oBAAoB,EAAE;gBACpB,YAAY,EAAE,OAAO,CAAC,cAAc;gBACpC,KAAK,EAAE,cAAc,CAAC,UAAU;gBAChC,wBAAwB,EAAE;oBACxB,0BAA0B,wCACrB,WAAW,GACX,uBAAuB,CAC3B;iBACF;aACF,EACD,qBAAqB,wCAChB,YAAY,KACf,MAAM,EAAE,MAAM,EACd,OAAO,EAAE,KAAK,EACd,KAAK,EAAE,EAAE,EACT,UAAU,EAAE,MAAM,EAClB,eAAe,EAAE,aAAa,EAC9B,0BAA0B,wCACrB,YAAY,GACZ,uBAAuB,GAE5B,SAAS,EAAE;oBACT,eAAe,EAAE,aAAa;oBAC9B,0BAA0B,EAAE;wBAC1B,eAAe,EAAE,cAAc,CAAC,uBAAuB;qBACxD;iBACF,KAEH,2BAA2B,EAAE;gBAC3B,eAAe,EAAE;oBACf,KAAK,EAAE,SAAS;oBAChB,OAAO,EAAE,MAAM;oBACf,YAAY,EAAE,OAAO,CAAC,cAAc;oBACpC,MAAM,EAAE,oBAAa,cAAc,CAAC,WAAW,CAAE;iBAClD;aACF,EACD,6BAA6B,EAAE;gBAC7B,eAAe,EAAE,aAAa;gBAC9B,0BAA0B,EAAE;oBAC1B,eAAe,EAAE,cAAc,CAAC,uBAAuB;iBACxD;gBACD,SAAS,EAAE;oBACT,eAAe,EAAE,aAAa;oBAC9B,0BAA0B,EAAE;wBAC1B,eAAe,EAAE,cAAc,CAAC,8BAA8B;qBAC/D;iBACF;aACF,EACD,wBAAwB,EAAE;gBACxB,MAAM,EAAE,MAAM;aACf,GACF,CAAC;QAEF,OAAO,MAAM,CAAC;IAChB,CAAC;IA9JD,8DA8JC;IAED,oGAAoG;IACpG,SAAS,oBAAoB,CAAC,KAAa;QACjC,IAAA,OAAO,GAAqB,KAAK,QAA1B,EAAE,cAAc,GAAK,KAAK,eAAV,CAAW;QAE1C,IAAM,YAAY,GAAG;YACnB,YAAY,EAAE,CAAC;YACf,oBAAoB,EAAE,OAAO,CAAC,cAAc;YAC5C,uBAAuB,EAAE,OAAO,CAAC,cAAc;SAChD,CAAC;QAEF,IAAM,WAAW,GAAG;YAClB,YAAY,EAAE,CAAC;YACf,mBAAmB,EAAE,OAAO,CAAC,cAAc;YAC3C,sBAAsB,EAAE,OAAO,CAAC,cAAc;SAC/C,CAAC;QAEF,IAAM,MAAM,GAA2B;YACrC,oBAAoB,EAAE;gBACpB,YAAY,EAAE,OAAO,CAAC,cAAc;gBACpC,KAAK,EAAE,cAAc,CAAC,UAAU;gBAChC,wBAAwB,wCACnB,WAAW,KACd,MAAM,EAAE,MAAM,GACf;gBACD,2BAA2B,EAAE;oBAC3B,MAAM,EAAE,MAAM;iBACf;aACF;YACD,qBAAqB,wCAChB,YAAY,KACf,MAAM,EAAE,MAAM,EACd,OAAO,EAAE,KAAK,EACd,KAAK,EAAE,EAAE,GACV;YACD,2BAA2B,EAAE;gBAC3B,eAAe,EAAE;oBACf,KAAK,EAAE,KAAK;oBACZ,OAAO,EAAE,MAAM;oBACf,YAAY,EAAE,OAAO,CAAC,cAAc;oBACpC,MAAM,EAAE,oBAAa,cAAc,CAAC,WAAW,CAAE;iBAClD;aACF;YACD,sBAAsB,EAAE;gBACtB,eAAe,qBACb,KAAK,EAAE,KAAK,EACZ,OAAO,EAAE,MAAM,EACf,MAAM,EAAE,oBAAa,cAAc,CAAC,WAAW,CAAE,IAC9C,YAAY,CAChB;aACF;YACD,kBAAkB,EAAE;gBAClB,KAAK,EAAE,EAAE;aACV;YACD,0BAA0B,EAAE;gBAC1B,KAAK,EAAE,EAAE;aACV;SACF,CAAC;QAEF,OAAO,MAAM,CAAC;IAChB,CAAC","sourcesContent":["import type { IButtonProps, IButtonStyles, IStyleFunctionOrObject, ITheme } from '@fluentui/react';\n\nexport function getCommandBarButtonStyles(props: IButtonProps): IStyleFunctionOrObject<IButtonProps, IButtonStyles> {\n  const { theme } = props;\n  const { semanticColors, effects } = theme!;\n\n  const rightCorners = {\n    borderRadius: 0,\n    borderTopRightRadius: effects.roundedCorner4,\n    borderBottomRightRadius: effects.roundedCorner4,\n  };\n\n  const leftCorners = {\n    borderRadius: 0,\n    borderTopLeftRadius: effects.roundedCorner4,\n    borderBottomLeftRadius: effects.roundedCorner4,\n  };\n\n  const commandBarHeightPadding = {\n    height: 32,\n    paddingLeft: 4,\n    paddingRight: 4,\n  };\n\n  const defaultSplitStyles: Partial<IButtonStyles> = getSplitButtonStyles(theme!);\n\n  const styles: Partial<IButtonStyles> = {\n    root: {\n      backgroundColor: 'transparent',\n      height: '100%',\n      padding: '0px',\n      margin: '0px 2px',\n      borderRadius: effects.roundedCorner4,\n      '.ms-Fabric--isFocusVisible &:focus::after': {\n        top: 4,\n        right: 0,\n        bottom: 4,\n        left: 0,\n        outline: 'none',\n        borderRadius: effects.roundedCorner4,\n        border: `2px solid ${semanticColors.focusBorder}`,\n      },\n    },\n    rootHovered: {\n      backgroundColor: 'transparent',\n      '.ms-Button-flexContainer': {\n        backgroundColor: semanticColors.buttonBackgroundHovered,\n      },\n    },\n    rootPressed: {\n      backgroundColor: 'transparent',\n      '.ms-Button-flexContainer': {\n        backgroundColor: semanticColors.buttonBackgroundPressed,\n      },\n    },\n    rootExpanded: {\n      backgroundColor: 'transparent',\n      color: 'inherit',\n      '.ms-Button-flexContainer': {\n        backgroundColor: 'transparent',\n      },\n    },\n    rootChecked: {\n      backgroundColor: 'transparent',\n      '.ms-Button-flexContainer': {\n        backgroundColor: semanticColors.buttonBackgroundChecked,\n      },\n    },\n    rootCheckedHovered: {\n      backgroundColor: 'transparent',\n      '.ms-Button-flexContainer': {\n        backgroundColor: semanticColors.buttonBackgroundCheckedHovered,\n      },\n    },\n    rootCheckedPressed: {\n      backgroundColor: 'transparent',\n      '.ms-Button-flexContainer': {\n        backgroundColor: semanticColors.buttonBackgroundPressed,\n      },\n    },\n    rootExpandedHovered: {\n      backgroundColor: 'transparent',\n      '.ms-Button-flexContainer': {\n        backgroundColor: semanticColors.buttonBackgroundHovered,\n      },\n    },\n    flexContainer: {\n      height: 32,\n      paddingLeft: 4,\n      paddingRight: 4,\n      borderRadius: effects.roundedCorner4,\n    },\n    icon: {\n      color: 'inherit',\n    },\n    menuIcon: {\n      color: 'inherit',\n      fontSize: '10px',\n    },\n    rootDisabled: {\n      backgroundColor: 'transparent',\n    },\n    textContainer: {\n      height: 16,\n    },\n    ...defaultSplitStyles,\n    splitButtonContainer: {\n      borderRadius: effects.roundedCorner4,\n      color: semanticColors.buttonText,\n      '.ms-Button:first-child': {\n        '.ms-Button-flexContainer': {\n          ...leftCorners,\n          ...commandBarHeightPadding,\n        },\n      },\n    },\n    splitButtonMenuButton: {\n      ...rightCorners,\n      height: '100%',\n      padding: '0px',\n      width: 20,\n      marginLeft: '-2px',\n      backgroundColor: 'transparent',\n      '.ms-Button-flexContainer': {\n        ...rightCorners,\n        ...commandBarHeightPadding,\n      },\n      '&:hover': {\n        backgroundColor: 'transparent',\n        '.ms-Button-flexContainer': {\n          backgroundColor: semanticColors.buttonBackgroundHovered,\n        },\n      },\n    },\n    splitButtonContainerFocused: {\n      ':focus::after': {\n        inset: `4px 0px`,\n        outline: `none`,\n        borderRadius: effects.roundedCorner4,\n        border: `2px solid ${semanticColors.focusBorder}`,\n      },\n    },\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: 'transparent',\n      '.ms-Button-flexContainer': {\n        backgroundColor: semanticColors.buttonBackgroundChecked,\n      },\n      '&:hover': {\n        backgroundColor: 'transparent',\n        '.ms-Button-flexContainer': {\n          backgroundColor: semanticColors.buttonBackgroundCheckedHovered,\n        },\n      },\n    },\n    splitButtonFlexContainer: {\n      border: 'none',\n    },\n  };\n\n  return styles;\n}\n\n// This function will be moved to Button.styles.ts in another PR to add default split button styling\nfunction getSplitButtonStyles(theme: ITheme): Partial<IButtonStyles> {\n  const { effects, semanticColors } = theme;\n\n  const rightCorners = {\n    borderRadius: 0,\n    borderTopRightRadius: effects.roundedCorner4,\n    borderBottomRightRadius: effects.roundedCorner4,\n  };\n\n  const leftCorners = {\n    borderRadius: 0,\n    borderTopLeftRadius: effects.roundedCorner4,\n    borderBottomLeftRadius: effects.roundedCorner4,\n  };\n\n  const styles: Partial<IButtonStyles> = {\n    splitButtonContainer: {\n      borderRadius: effects.roundedCorner4,\n      color: semanticColors.buttonText,\n      '.ms-Button:first-child': {\n        ...leftCorners,\n        height: '100%',\n      },\n      '.ms-Button--primary:hover': {\n        border: `none`,\n      },\n    },\n    splitButtonMenuButton: {\n      ...rightCorners,\n      height: '100%',\n      padding: '0px',\n      width: 20,\n    },\n    splitButtonContainerFocused: {\n      ':focus::after': {\n        inset: '0px',\n        outline: `none`,\n        borderRadius: effects.roundedCorner4,\n        border: `2px solid ${semanticColors.focusBorder}`,\n      },\n    },\n    splitButtonMenuFocused: {\n      ':focus::after': {\n        inset: '0px',\n        outline: `none`,\n        border: `2px solid ${semanticColors.focusBorder}`,\n        ...rightCorners,\n      },\n    },\n    splitButtonDivider: {\n      right: 19,\n    },\n    splitButtonDividerDisabled: {\n      right: 19,\n    },\n  };\n\n  return styles;\n}\n"]}