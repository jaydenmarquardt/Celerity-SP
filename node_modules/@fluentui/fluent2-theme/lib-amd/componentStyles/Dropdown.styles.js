define(["require", "exports", "@fluentui/react", "./inputStyleHelpers.utils"], function (require, exports, react_1, inputStyleHelpers_utils_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getDropdownStyles = void 0;
    function getDropdownStyles(props) {
        var _a;
        var theme = props.theme, disabled = props.disabled;
        var _b = theme, semanticColors = _b.semanticColors, palette = _b.palette;
        var bottomBorderFocusColor = (_a = semanticColors === null || semanticColors === void 0 ? void 0 : semanticColors.inputBottomBorderFocus) !== null && _a !== void 0 ? _a : palette.themePrimary;
        var focusBottomBorder = "2px solid ".concat(bottomBorderFocusColor);
        return {
            dropdown: [
                disabled && (0, inputStyleHelpers_utils_1.getFluent2InputDisabledStyles)(theme),
                !disabled && {
                    selectors: {
                        '&:focus:after': [
                            {
                                borderRadius: theme === null || theme === void 0 ? void 0 : theme.effects.roundedCorner4,
                                borderColor: semanticColors.focusBorder,
                                borderBottom: focusBottomBorder,
                                clipPath: 'inset(calc(100% - 2px) 0 0 0)',
                            },
                        ],
                    },
                },
            ],
            title: [{ borderRadius: theme === null || theme === void 0 ? void 0 : theme.effects.roundedCorner4 }, disabled && { backgroundColor: 'unset' }],
            caretDown: { color: theme === null || theme === void 0 ? void 0 : theme.palette.neutralQuaternary },
            label: { fontWeight: react_1.FontWeights.regular },
        };
    }
    exports.getDropdownStyles = getDropdownStyles;
});
//# sourceMappingURL=Dropdown.styles.js.map