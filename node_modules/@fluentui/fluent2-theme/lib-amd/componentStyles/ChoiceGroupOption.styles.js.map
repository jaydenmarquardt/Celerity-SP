{"version":3,"file":"ChoiceGroupOption.styles.js","sourceRoot":"../src/","sources":["componentStyles/ChoiceGroupOption.styles.ts"],"names":[],"mappings":";;;;IAEA,IAAM,yBAAyB,GAAG,UAAC,KAAmC;QAC5D,IAAA,KAAK,GAAwB,KAAK,MAA7B,EAAE,OAAO,GAAe,KAAK,QAApB,EAAE,QAAQ,GAAK,KAAK,SAAV,CAAW;QAE3C,IAAI,QAAQ,EAAE;YACZ,OAAO,KAAK,CAAC,cAAc,CAAC,YAAY,CAAC;SAC1C;aAAM,IAAI,OAAO,EAAE;YAClB,OAAO,KAAK,CAAC,cAAc,CAAC,sBAAsB,CAAC;SACpD;aAAM;YACL,OAAO,KAAK,CAAC,cAAc,CAAC,oBAAoB,CAAC;SAClD;IACH,CAAC,CAAC;IAEF,IAAM,uBAAuB,GAAG,UAAC,KAAmC;QAC1D,IAAA,KAAK,GAAwB,KAAK,MAA7B,EAAE,OAAO,GAAe,KAAK,QAApB,EAAE,QAAQ,GAAK,KAAK,SAAV,CAAW;QAE3C,IAAI,QAAQ,EAAE;YACZ,OAAO,KAAK,CAAC,cAAc,CAAC,YAAY,CAAC;SAC1C;aAAM,IAAI,OAAO,EAAE;YAClB,OAAO,KAAK,CAAC,cAAc,CAAC,gBAAgB,CAAC;SAC9C;aAAM;YACL,OAAO,KAAK,CAAC,cAAc,CAAC,oBAAoB,CAAC;SAClD;IACH,CAAC,CAAC;IAEF,IAAM,gCAAgC,GAAG,UAAC,KAAmC;QACnE,IAAA,KAAK,GAAe,KAAK,MAApB,EAAE,QAAQ,GAAK,KAAK,SAAV,CAAW;QAElC,IAAI,QAAQ,EAAE;YACZ,OAAO,KAAK,CAAC,cAAc,CAAC,YAAY,CAAC;SAC1C;aAAM;YACL,OAAO,KAAK,CAAC,cAAc,CAAC,gBAAgB,CAAC;SAC9C;IACH,CAAC,CAAC;IAEF,IAAM,mBAAmB,GAAG,UAAC,KAAmC,EAAE,OAAgB;QACxE,IAAA,KAAK,GAAwB,KAAK,MAA7B,EAAE,OAAO,GAAe,KAAK,QAApB,EAAE,QAAQ,GAAK,KAAK,SAAV,CAAW;QAE3C,IAAI,QAAQ,IAAI,OAAO,EAAE;YACvB,OAAO,KAAK,CAAC,cAAc,CAAC,YAAY,CAAC;SAC1C;aAAM,IAAI,OAAO,EAAE;YAClB,IAAI,OAAO,EAAE;gBACX,OAAO,KAAK,CAAC,cAAc,CAAC,6BAA6B,CAAC;aAC3D;YAED,OAAO,KAAK,CAAC,cAAc,CAAC,sBAAsB,CAAC;SACpD;aAAM;YACL,OAAO,aAAa,CAAC;SACtB;IACH,CAAC,CAAC;IAEF,IAAM,mBAAmB,GAAG,UAAC,KAAmC,EAAE,OAAgB;QACxE,IAAA,KAAK,GAAwB,KAAK,MAA7B,EAAE,OAAO,GAAe,KAAK,QAApB,EAAE,QAAQ,GAAK,KAAK,SAAV,CAAW;QAE3C,IAAI,QAAQ,EAAE;YACZ,OAAO,KAAK,CAAC,cAAc,CAAC,YAAY,CAAC;SAC1C;aAAM,IAAI,OAAO,EAAE;YAClB,IAAI,OAAO,EAAE;gBACX,OAAO,KAAK,CAAC,cAAc,CAAC,6BAA6B,CAAC;aAC3D;YAED,OAAO,KAAK,CAAC,cAAc,CAAC,sBAAsB,CAAC;SACpD;aAAM;YACL,OAAO,KAAK,CAAC,cAAc,CAAC,gBAAgB,CAAC;SAC9C;IACH,CAAC,CAAC;IAEF,IAAM,iBAAiB,GAAG,UAAC,KAAmC;QACpD,IAAA,KAAK,GAAwB,KAAK,MAA7B,EAAE,OAAO,GAAe,KAAK,QAApB,EAAE,QAAQ,GAAK,KAAK,SAAV,CAAW;QAE3C,IAAI,QAAQ,EAAE;YACZ,OAAO,KAAK,CAAC,cAAc,CAAC,YAAY,CAAC;SAC1C;aAAM,IAAI,OAAO,EAAE;YAClB,OAAO,uBAAuB,CAAC,KAAK,CAAC,CAAC;SACvC;aAAM;YACL,OAAO,KAAK,CAAC,cAAc,CAAC,gBAAgB,CAAC;SAC9C;IACH,CAAC,CAAC;IAEK,IAAM,iCAAiC,GAAG,UAC/C,KAAmC;QAEnC,OAAO;YACL,KAAK,EAAE;gBACL,KAAK,EAAE,uBAAuB,CAAC,KAAK,CAAC;gBACrC,sBAAsB,EAAE;oBACtB,KAAK,EAAE,uBAAuB,CAAC,KAAK,CAAC;iBACtC;gBACD,8BAA8B,EAAE;oBAC9B,KAAK,EAAE,iBAAiB,CAAC,KAAK,CAAC;iBAChC;gBACD,SAAS,EAAE;oBACT,aAAa;oBACb,UAAU,EAAE;wBACV,WAAW,EAAE,yBAAyB,CAAC,KAAK,CAAC;wBAC7C,KAAK,EAAE,MAAM;wBACb,MAAM,EAAE,MAAM;wBACd,MAAM,EAAE,KAAK;qBACd;oBACD,gBAAgB;oBAChB,SAAS,EAAE;wBACT,KAAK,EAAE,MAAM;wBACb,MAAM,EAAE,MAAM;wBACd,UAAU,EAAE,mBAAmB,CAAC,KAAK,EAAE,KAAK,CAAC;wBAC7C,WAAW,EAAE,mBAAmB,CAAC,KAAK,EAAE,KAAK,CAAC;qBAC/C;oBACD,QAAQ,EAAE;wBACR,KAAK,EAAE,gCAAgC,CAAC,KAAK,CAAC;qBAC/C;oBACD,gBAAgB,EAAE;wBAChB,WAAW,EAAE,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC;qBAC9C;oBACD,eAAe,EAAE;wBACf,UAAU,EAAE,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC;wBAC5C,WAAW,EAAE,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC;qBAC9C;iBACF;aACF;SACF,CAAC;IACJ,CAAC,CAAC;IAxCW,QAAA,iCAAiC,qCAwC5C;IAEF,SAAgB,0BAA0B,CACxC,KAAmC;QAEnC,OAAO,IAAA,yCAAiC,EAAC,KAAK,CAAC,CAAC;IAClD,CAAC;IAJD,gEAIC","sourcesContent":["import type { IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles, IStyleFunctionOrObject } from '@fluentui/react';\n\nconst getChoiceGroupOptionColor = (props: IChoiceGroupOptionStyleProps) => {\n  const { theme, checked, disabled } = props;\n\n  if (disabled) {\n    return theme.semanticColors.disabledText;\n  } else if (checked) {\n    return theme.semanticColors.inputBackgroundChecked;\n  } else {\n    return theme.semanticColors.inputPlaceholderText;\n  }\n};\n\nconst getChoiceGroupTextColor = (props: IChoiceGroupOptionStyleProps) => {\n  const { theme, checked, disabled } = props;\n\n  if (disabled) {\n    return theme.semanticColors.disabledText;\n  } else if (checked) {\n    return theme.semanticColors.inputIconHovered;\n  } else {\n    return theme.semanticColors.inputPlaceholderText;\n  }\n};\n\nconst getHoveredChoiceGroupOptionColor = (props: IChoiceGroupOptionStyleProps) => {\n  const { theme, disabled } = props;\n\n  if (disabled) {\n    return theme.semanticColors.disabledText;\n  } else {\n    return theme.semanticColors.inputIconHovered;\n  }\n};\n\nconst getInnerCircleColor = (props: IChoiceGroupOptionStyleProps, isHover: boolean) => {\n  const { theme, checked, disabled } = props;\n\n  if (disabled && checked) {\n    return theme.semanticColors.disabledText;\n  } else if (checked) {\n    if (isHover) {\n      return theme.semanticColors.inputBackgroundCheckedHovered;\n    }\n\n    return theme.semanticColors.inputBackgroundChecked;\n  } else {\n    return 'transparent';\n  }\n};\n\nconst getOuterCircleColor = (props: IChoiceGroupOptionStyleProps, isHover: boolean) => {\n  const { theme, checked, disabled } = props;\n\n  if (disabled) {\n    return theme.semanticColors.disabledText;\n  } else if (checked) {\n    if (isHover) {\n      return theme.semanticColors.inputBackgroundCheckedHovered;\n    }\n\n    return theme.semanticColors.inputBackgroundChecked;\n  } else {\n    return theme.semanticColors.inputIconHovered;\n  }\n};\n\nconst getTextHoverColor = (props: IChoiceGroupOptionStyleProps) => {\n  const { theme, checked, disabled } = props;\n\n  if (disabled) {\n    return theme.semanticColors.disabledText;\n  } else if (checked) {\n    return getChoiceGroupTextColor(props);\n  } else {\n    return theme.semanticColors.inputIconHovered;\n  }\n};\n\nexport const getDefaultChoiceGroupOptionStyles = (\n  props: IChoiceGroupOptionStyleProps,\n): Partial<IChoiceGroupOptionStyles> => {\n  return {\n    field: {\n      color: getChoiceGroupTextColor(props),\n      '.ms-ChoiceFieldLabel': {\n        color: getChoiceGroupTextColor(props),\n      },\n      '&:hover .ms-ChoiceFieldLabel': {\n        color: getTextHoverColor(props),\n      },\n      selectors: {\n        // The circle\n        '::before': {\n          borderColor: getChoiceGroupOptionColor(props),\n          width: '17px',\n          height: '17px',\n          margin: '2px',\n        },\n        // the inner dot\n        '::after': {\n          width: '11px',\n          height: '11px',\n          background: getInnerCircleColor(props, false),\n          borderColor: getInnerCircleColor(props, false),\n        },\n        ':hover': {\n          color: getHoveredChoiceGroupOptionColor(props),\n        },\n        ':hover::before': {\n          borderColor: getOuterCircleColor(props, true),\n        },\n        ':hover::after': {\n          background: getInnerCircleColor(props, true),\n          borderColor: getInnerCircleColor(props, true),\n        },\n      },\n    },\n  };\n};\n\nexport function getChoiceGroupOptionStyles(\n  props: IChoiceGroupOptionStyleProps,\n): IStyleFunctionOrObject<IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles> {\n  return getDefaultChoiceGroupOptionStyles(props);\n}\n"]}