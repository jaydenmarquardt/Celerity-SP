{"version":3,"file":"Dropdown.styles.js","sourceRoot":"../src/","sources":["componentStyles/Dropdown.styles.ts"],"names":[],"mappings":";;;;IAKA,SAAgB,iBAAiB,CAC/B,KAA0B;;QAElB,IAAA,KAAK,GAAe,KAAK,MAApB,EAAE,QAAQ,GAAK,KAAK,SAAV,CAAW;QAC5B,IAAA,KAA8B,KAAM,EAAlC,cAAc,oBAAA,EAAE,OAAO,aAAW,CAAC;QAE3C,IAAM,sBAAsB,GAC1B,MAAC,cAA0C,aAA1C,cAAc,uBAAd,cAAc,CAA8B,sBAAsB,mCAAI,OAAO,CAAC,YAAY,CAAC;QAE9F,IAAM,iBAAiB,GAAG,oBAAa,sBAAsB,CAAE,CAAC;QAEhE,OAAO;YACL,QAAQ,EAAE;gBACR,QAAQ,IAAI,IAAA,uDAA6B,EAAC,KAAM,CAAC;gBACjD,CAAC,QAAQ,IAAI;oBACX,SAAS,EAAE;wBACT,eAAe,EAAE;4BACf;gCACE,YAAY,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,cAAc;gCAC3C,WAAW,EAAE,cAAc,CAAC,WAAW;gCACvC,YAAY,EAAE,iBAAiB;gCAC/B,QAAQ,EAAE,+BAA+B;6BAC1C;yBACF;qBACF;iBACF;aACF;YACD,KAAK,EAAE,CAAC,EAAE,YAAY,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,cAAc,EAAE,EAAE,QAAQ,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,CAAC;YAClG,SAAS,EAAE,EAAE,KAAK,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,iBAAiB,EAAE;YACtD,KAAK,EAAE,EAAE,UAAU,EAAE,mBAAW,CAAC,OAAO,EAAE;SAC3C,CAAC;IACJ,CAAC;IA/BD,8CA+BC","sourcesContent":["import { IDropdownStyleProps, IDropdownStyles, IStyleFunctionOrObject } from '@fluentui/react';\nimport { FontWeights } from '@fluentui/react';\nimport { IExtendedSemanticColors } from '../types';\nimport { getFluent2InputDisabledStyles } from './inputStyleHelpers.utils';\n\nexport function getDropdownStyles(\n  props: IDropdownStyleProps,\n): IStyleFunctionOrObject<IDropdownStyleProps, IDropdownStyles> {\n  const { theme, disabled } = props;\n  const { semanticColors, palette } = theme!;\n\n  const bottomBorderFocusColor =\n    (semanticColors as IExtendedSemanticColors)?.inputBottomBorderFocus ?? palette.themePrimary;\n\n  const focusBottomBorder = `2px solid ${bottomBorderFocusColor}`;\n\n  return {\n    dropdown: [\n      disabled && getFluent2InputDisabledStyles(theme!),\n      !disabled && {\n        selectors: {\n          '&:focus:after': [\n            {\n              borderRadius: theme?.effects.roundedCorner4,\n              borderColor: semanticColors.focusBorder,\n              borderBottom: focusBottomBorder,\n              clipPath: 'inset(calc(100% - 2px) 0 0 0)',\n            },\n          ],\n        },\n      },\n    ],\n    title: [{ borderRadius: theme?.effects.roundedCorner4 }, disabled && { backgroundColor: 'unset' }],\n    caretDown: { color: theme?.palette.neutralQuaternary },\n    label: { fontWeight: FontWeights.regular },\n  };\n}\n"]}