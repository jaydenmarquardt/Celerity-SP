define(["require", "exports", "@fluentui/react", "./inputStyleHelpers.utils"], function (require, exports, react_1, inputStyleHelpers_utils_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getTextFieldStyles = void 0;
    function getTextFieldStyles(props) {
        var theme = props.theme, focused = props.focused, borderless = props.borderless, underlined = props.underlined, hasErrorMessage = props.hasErrorMessage, disabled = props.disabled;
        var effects = theme.effects, semanticColors = theme.semanticColors, palette = theme.palette;
        var unsetBackgroundColor = { backgroundColor: 'unset' };
        var borderBottomColor = hasErrorMessage ? semanticColors.errorText : palette.neutralPrimary;
        var restBottomBorder = borderless || underlined ? 'unset' : "1px solid ".concat(borderBottomColor);
        var styles = {
            subComponentStyles: {
                label: {
                    root: {
                        fontWeight: react_1.FontWeights.regular,
                    },
                },
            },
            prefix: unsetBackgroundColor,
            suffix: unsetBackgroundColor,
            field: [
                focused && {
                    border: 'unset',
                    ':after': {
                        border: 'unset',
                    },
                },
                disabled && {
                    backgroundColor: 'unset',
                },
                {
                    borderRadius: effects.roundedCorner4,
                    ':after': {
                        borderRadius: effects.roundedCorner4,
                    },
                },
            ],
            fieldGroup: [
                {
                    borderBottom: restBottomBorder,
                    borderRadius: effects.roundedCorner4,
                    ':after': {
                        borderRadius: effects.roundedCorner4,
                    },
                },
                focused && (0, inputStyleHelpers_utils_1.getFluent2InputFocusStyles)(theme, underlined, hasErrorMessage),
                disabled && (0, inputStyleHelpers_utils_1.getFluent2InputDisabledStyles)(theme),
                disabled && { borderBottom: "1px solid ".concat(semanticColors.disabledText) },
            ],
        };
        return styles;
    }
    exports.getTextFieldStyles = getTextFieldStyles;
});
//# sourceMappingURL=TextField.styles.js.map