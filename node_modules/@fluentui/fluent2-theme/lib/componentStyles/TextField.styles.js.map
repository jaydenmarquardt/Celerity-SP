{"version":3,"file":"TextField.styles.js","sourceRoot":"../src/","sources":["componentStyles/TextField.styles.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAC9C,OAAO,EAAE,6BAA6B,EAAE,0BAA0B,EAAE,MAAM,2BAA2B,CAAC;AAEtG,MAAM,UAAU,kBAAkB,CAChC,KAA2B;IAEnB,IAAA,KAAK,GAAiE,KAAK,MAAtE,EAAE,OAAO,GAAwD,KAAK,QAA7D,EAAE,UAAU,GAA4C,KAAK,WAAjD,EAAE,UAAU,GAAgC,KAAK,WAArC,EAAE,eAAe,GAAe,KAAK,gBAApB,EAAE,QAAQ,GAAK,KAAK,SAAV,CAAW;IAC5E,IAAA,OAAO,GAA8B,KAAK,QAAnC,EAAE,cAAc,GAAc,KAAK,eAAnB,EAAE,OAAO,GAAK,KAAK,QAAV,CAAW;IAEnD,IAAM,oBAAoB,GAAG,EAAE,eAAe,EAAE,OAAO,EAAE,CAAC;IAE1D,IAAM,iBAAiB,GAAG,eAAe,CAAC,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC;IAE9F,IAAM,gBAAgB,GAAG,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,oBAAa,iBAAiB,CAAE,CAAC;IAE/F,IAAM,MAAM,GAA8B;QACxC,kBAAkB,EAAE;YAClB,KAAK,EAAE;gBACL,IAAI,EAAE;oBACJ,UAAU,EAAE,WAAW,CAAC,OAAO;iBAChC;aACF;SACF;QACD,MAAM,EAAE,oBAAoB;QAC5B,MAAM,EAAE,oBAAoB;QAC5B,KAAK,EAAE;YACL,OAAO,IAAI;gBACT,MAAM,EAAE,OAAO;gBACf,QAAQ,EAAE;oBACR,MAAM,EAAE,OAAO;iBAChB;aACF;YACD,QAAQ,IAAI;gBACV,eAAe,EAAE,OAAO;aACzB;YACD;gBACE,YAAY,EAAE,OAAO,CAAC,cAAc;gBACpC,QAAQ,EAAE;oBACR,YAAY,EAAE,OAAO,CAAC,cAAc;iBACrC;aACF;SACF;QACD,UAAU,EAAE;YACV;gBACE,YAAY,EAAE,gBAAgB;gBAC9B,YAAY,EAAE,OAAO,CAAC,cAAc;gBACpC,QAAQ,EAAE;oBACR,YAAY,EAAE,OAAO,CAAC,cAAc;iBACrC;aACF;YACD,OAAO,IAAI,0BAA0B,CAAC,KAAK,EAAE,UAAU,EAAE,eAAe,CAAC;YACzE,QAAQ,IAAI,6BAA6B,CAAC,KAAK,CAAC;YAChD,QAAQ,IAAI,EAAE,YAAY,EAAE,oBAAa,cAAc,CAAC,YAAY,CAAE,EAAE;SACzE;KACF,CAAC;IAEF,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["import type { IStyleFunctionOrObject, ITextFieldStyleProps, ITextFieldStyles } from '@fluentui/react';\nimport { FontWeights } from '@fluentui/react';\nimport { getFluent2InputDisabledStyles, getFluent2InputFocusStyles } from './inputStyleHelpers.utils';\n\nexport function getTextFieldStyles(\n  props: ITextFieldStyleProps,\n): IStyleFunctionOrObject<ITextFieldStyleProps, ITextFieldStyles> {\n  const { theme, focused, borderless, underlined, hasErrorMessage, disabled } = props;\n  const { effects, semanticColors, palette } = theme;\n\n  const unsetBackgroundColor = { backgroundColor: 'unset' };\n\n  const borderBottomColor = hasErrorMessage ? semanticColors.errorText : palette.neutralPrimary;\n\n  const restBottomBorder = borderless || underlined ? 'unset' : `1px solid ${borderBottomColor}`;\n\n  const styles: Partial<ITextFieldStyles> = {\n    subComponentStyles: {\n      label: {\n        root: {\n          fontWeight: FontWeights.regular,\n        },\n      },\n    },\n    prefix: unsetBackgroundColor,\n    suffix: unsetBackgroundColor,\n    field: [\n      focused && {\n        border: 'unset',\n        ':after': {\n          border: 'unset',\n        },\n      },\n      disabled && {\n        backgroundColor: 'unset',\n      },\n      {\n        borderRadius: effects.roundedCorner4,\n        ':after': {\n          borderRadius: effects.roundedCorner4,\n        },\n      },\n    ],\n    fieldGroup: [\n      {\n        borderBottom: restBottomBorder,\n        borderRadius: effects.roundedCorner4,\n        ':after': {\n          borderRadius: effects.roundedCorner4,\n        },\n      },\n      focused && getFluent2InputFocusStyles(theme, underlined, hasErrorMessage),\n      disabled && getFluent2InputDisabledStyles(theme),\n      disabled && { borderBottom: `1px solid ${semanticColors.disabledText}` },\n    ],\n  };\n\n  return styles;\n}\n"]}