var getPillBackgroundColor = function (props) {
    var theme = props.theme, checked = props.checked, disabled = props.disabled;
    var semanticColors = theme.semanticColors;
    if (checked) {
        return disabled ? semanticColors.buttonBackgroundDisabled : semanticColors.inputBackgroundChecked;
    }
    else if (!checked) {
        return semanticColors.primaryButtonBorder;
    }
    return undefined;
};
var getHoveredPillBackgroundColor = function (props) {
    var theme = props.theme, checked = props.checked, disabled = props.disabled;
    var semanticColors = theme.semanticColors;
    if (checked) {
        return disabled ? semanticColors.buttonBackgroundDisabled : semanticColors.inputBackgroundCheckedHovered;
    }
    else if (!checked) {
        return semanticColors.primaryButtonBorder;
    }
    return undefined;
};
var getPressedPillBackgroundColor = function (props) {
    var theme = props.theme, checked = props.checked, disabled = props.disabled;
    var semanticColors = theme.semanticColors;
    if (checked) {
        return disabled ? semanticColors.disabledBackground : semanticColors.primaryButtonBackgroundPressed;
    }
    else if (!checked) {
        return semanticColors.primaryButtonBorder;
    }
    return undefined;
};
var getLabelColor = function (props) {
    var theme = props.theme, disabled = props.disabled;
    var semanticColors = theme.semanticColors;
    return disabled ? semanticColors.disabledBodySubtext : semanticColors.inputText;
};
export var getToggleStyles = function (props) {
    var theme = props.theme, disabled = props.disabled;
    var semanticColors = theme.semanticColors, effects = theme.effects;
    return {
        root: {},
        label: {
            color: getLabelColor(props),
        },
        thumb: {
            width: '14px',
            height: '14px',
            backgroundColor: disabled ? semanticColors.inputIconDisabled : undefined,
        },
        container: {},
        pill: {
            backgroundColor: getPillBackgroundColor(props),
            '&:hover': {
                backgroundColor: getHoveredPillBackgroundColor(props),
            },
            '&:active': {
                backgroundColor: getPressedPillBackgroundColor(props),
            },
            '&:focus&:after': {
                borderRadius: effects.roundedCorner4,
                outlineWidth: '2px',
            },
        },
        text: {},
    };
};
//# sourceMappingURL=Toggle.styles.js.map