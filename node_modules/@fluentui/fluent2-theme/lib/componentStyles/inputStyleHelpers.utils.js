export var getFluent2InputFocusStyles = function (theme, isUnderline, isError) {
    var _a;
    if (isUnderline === void 0) { isUnderline = false; }
    if (isError === void 0) { isError = false; }
    var semanticColors = theme.semanticColors;
    var bottomBorderFocusColor = (_a = semanticColors === null || semanticColors === void 0 ? void 0 : semanticColors.inputBottomBorderFocus) !== null && _a !== void 0 ? _a : theme.palette.themePrimary;
    var focusBottomBorder = "2px solid ".concat(isError ? semanticColors.errorText : bottomBorderFocusColor);
    return {
        borderColor: semanticColors.focusBorder,
        ':after': {
            borderColor: semanticColors.focusBorder,
            borderBottom: isUnderline ? 'unset' : focusBottomBorder,
            clipPath: 'inset(calc(100% - 2px) 0 0 0)',
        },
    };
};
export var getFluent2InputDisabledStyles = function (theme) {
    var semanticColors = theme.semanticColors;
    return {
        borderRadius: theme === null || theme === void 0 ? void 0 : theme.effects.roundedCorner4,
        border: "1px solid ".concat(semanticColors.disabledBorder),
        color: semanticColors.disabledText,
        backgroundColor: 'unset',
    };
};
//# sourceMappingURL=inputStyleHelpers.utils.js.map