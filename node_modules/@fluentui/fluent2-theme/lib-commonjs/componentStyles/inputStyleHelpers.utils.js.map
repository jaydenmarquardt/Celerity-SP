{"version":3,"file":"inputStyleHelpers.utils.js","sourceRoot":"../src/","sources":["componentStyles/inputStyleHelpers.utils.ts"],"names":[],"mappings":";;;AAGO,IAAM,0BAA0B,GAAG,UACxC,KAAa,EACb,WAA4B,EAC5B,OAAwB;;IADxB,4BAAA,EAAA,mBAA4B;IAC5B,wBAAA,EAAA,eAAwB;IAEhB,IAAA,cAAc,GAAK,KAAK,eAAV,CAAW;IAEjC,IAAM,sBAAsB,GAC1B,MAAC,cAA0C,aAA1C,cAAc,uBAAd,cAAc,CAA8B,sBAAsB,mCAAI,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC;IAEpG,IAAM,iBAAiB,GAAG,oBAAa,OAAO,CAAC,CAAC,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,sBAAsB,CAAE,CAAC;IAErG,OAAO;QACL,WAAW,EAAE,cAAc,CAAC,WAAW;QACvC,QAAQ,EAAE;YACR,WAAW,EAAE,cAAc,CAAC,WAAW;YACvC,YAAY,EAAE,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,iBAAiB;YACvD,QAAQ,EAAE,+BAA+B;SAC1C;KACF,CAAC;AACJ,CAAC,CAAC;AApBW,QAAA,0BAA0B,8BAoBrC;AAEK,IAAM,6BAA6B,GAAG,UAAC,KAAa;IACjD,IAAA,cAAc,GAAK,KAAK,eAAV,CAAW;IACjC,OAAO;QACL,YAAY,EAAE,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,CAAC,cAAc;QAC3C,MAAM,EAAE,oBAAa,cAAc,CAAC,cAAc,CAAE;QACpD,KAAK,EAAE,cAAc,CAAC,YAAY;QAClC,eAAe,EAAE,OAAO;KACzB,CAAC;AACJ,CAAC,CAAC;AARW,QAAA,6BAA6B,iCAQxC","sourcesContent":["import { IRawStyle, ITheme } from '@fluentui/react';\nimport { IExtendedSemanticColors } from '../types';\n\nexport const getFluent2InputFocusStyles = (\n  theme: ITheme,\n  isUnderline: boolean = false,\n  isError: boolean = false,\n): IRawStyle => {\n  const { semanticColors } = theme;\n\n  const bottomBorderFocusColor =\n    (semanticColors as IExtendedSemanticColors)?.inputBottomBorderFocus ?? theme.palette.themePrimary;\n\n  const focusBottomBorder = `2px solid ${isError ? semanticColors.errorText : bottomBorderFocusColor}`;\n\n  return {\n    borderColor: semanticColors.focusBorder,\n    ':after': {\n      borderColor: semanticColors.focusBorder,\n      borderBottom: isUnderline ? 'unset' : focusBottomBorder,\n      clipPath: 'inset(calc(100% - 2px) 0 0 0)',\n    },\n  };\n};\n\nexport const getFluent2InputDisabledStyles = (theme: ITheme): IRawStyle => {\n  const { semanticColors } = theme;\n  return {\n    borderRadius: theme?.effects.roundedCorner4,\n    border: `1px solid ${semanticColors.disabledBorder}`,\n    color: semanticColors.disabledText,\n    backgroundColor: 'unset',\n  };\n};\n"]}