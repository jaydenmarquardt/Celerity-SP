{"version":3,"file":"ChoiceGroupOption.styles.js","sourceRoot":"../src/","sources":["componentStyles/ChoiceGroupOption.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles, IStyleFunctionOrObject } from '@fluentui/react';\n\nconst getChoiceGroupOptionColor = (props: IChoiceGroupOptionStyleProps) => {\n  const { theme, checked, disabled } = props;\n\n  if (disabled) {\n    return theme.semanticColors.disabledText;\n  } else if (checked) {\n    return theme.semanticColors.inputBackgroundChecked;\n  } else {\n    return theme.semanticColors.inputPlaceholderText;\n  }\n};\n\nconst getChoiceGroupTextColor = (props: IChoiceGroupOptionStyleProps) => {\n  const { theme, checked, disabled } = props;\n\n  if (disabled) {\n    return theme.semanticColors.disabledText;\n  } else if (checked) {\n    return theme.semanticColors.inputIconHovered;\n  } else {\n    return theme.semanticColors.inputPlaceholderText;\n  }\n};\n\nconst getHoveredChoiceGroupOptionColor = (props: IChoiceGroupOptionStyleProps) => {\n  const { theme, disabled } = props;\n\n  if (disabled) {\n    return theme.semanticColors.disabledText;\n  } else {\n    return theme.semanticColors.inputIconHovered;\n  }\n};\n\nconst getInnerCircleColor = (props: IChoiceGroupOptionStyleProps, isHover: boolean) => {\n  const { theme, checked, disabled } = props;\n\n  if (disabled && checked) {\n    return theme.semanticColors.disabledText;\n  } else if (checked) {\n    if (isHover) {\n      return theme.semanticColors.inputBackgroundCheckedHovered;\n    }\n\n    return theme.semanticColors.inputBackgroundChecked;\n  } else {\n    return 'transparent';\n  }\n};\n\nconst getOuterCircleColor = (props: IChoiceGroupOptionStyleProps, isHover: boolean) => {\n  const { theme, checked, disabled } = props;\n\n  if (disabled) {\n    return theme.semanticColors.disabledText;\n  } else if (checked) {\n    if (isHover) {\n      return theme.semanticColors.inputBackgroundCheckedHovered;\n    }\n\n    return theme.semanticColors.inputBackgroundChecked;\n  } else {\n    return theme.semanticColors.inputIconHovered;\n  }\n};\n\nconst getTextHoverColor = (props: IChoiceGroupOptionStyleProps) => {\n  const { theme, checked, disabled } = props;\n\n  if (disabled) {\n    return theme.semanticColors.disabledText;\n  } else if (checked) {\n    return getChoiceGroupTextColor(props);\n  } else {\n    return theme.semanticColors.inputIconHovered;\n  }\n};\n\nexport const getDefaultChoiceGroupOptionStyles = (\n  props: IChoiceGroupOptionStyleProps,\n): Partial<IChoiceGroupOptionStyles> => {\n  return {\n    field: {\n      color: getChoiceGroupTextColor(props),\n      '.ms-ChoiceFieldLabel': {\n        color: getChoiceGroupTextColor(props),\n      },\n      '&:hover .ms-ChoiceFieldLabel': {\n        color: getTextHoverColor(props),\n      },\n      selectors: {\n        // The circle\n        '::before': {\n          borderColor: getChoiceGroupOptionColor(props),\n          width: '17px',\n          height: '17px',\n          margin: '2px',\n        },\n        // the inner dot\n        '::after': {\n          width: '11px',\n          height: '11px',\n          background: getInnerCircleColor(props, false),\n          borderColor: getInnerCircleColor(props, false),\n        },\n        ':hover': {\n          color: getHoveredChoiceGroupOptionColor(props),\n        },\n        ':hover::before': {\n          borderColor: getOuterCircleColor(props, true),\n        },\n        ':hover::after': {\n          background: getInnerCircleColor(props, true),\n          borderColor: getInnerCircleColor(props, true),\n        },\n      },\n    },\n  };\n};\n\nexport function getChoiceGroupOptionStyles(\n  props: IChoiceGroupOptionStyleProps,\n): IStyleFunctionOrObject<IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles> {\n  return getDefaultChoiceGroupOptionStyles(props);\n}\n"]}