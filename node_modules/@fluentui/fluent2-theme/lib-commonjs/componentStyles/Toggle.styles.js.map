{"version":3,"file":"Toggle.styles.js","sourceRoot":"../src/","sources":["componentStyles/Toggle.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IToggleStyleProps, IToggleStyles } from '@fluentui/react';\n\nconst getPillBackgroundColor = (props: IToggleStyleProps) => {\n  const { theme, checked, disabled } = props;\n  const { semanticColors } = theme;\n\n  if (checked) {\n    return disabled ? semanticColors.buttonBackgroundDisabled : semanticColors.inputBackgroundChecked;\n  } else if (!checked) {\n    return semanticColors.primaryButtonBorder;\n  }\n\n  return undefined;\n};\n\nconst getHoveredPillBackgroundColor = (props: IToggleStyleProps) => {\n  const { theme, checked, disabled } = props;\n  const { semanticColors } = theme;\n\n  if (checked) {\n    return disabled ? semanticColors.buttonBackgroundDisabled : semanticColors.inputBackgroundCheckedHovered;\n  } else if (!checked) {\n    return semanticColors.primaryButtonBorder;\n  }\n\n  return undefined;\n};\n\nconst getPressedPillBackgroundColor = (props: IToggleStyleProps) => {\n  const { theme, checked, disabled } = props;\n  const { semanticColors } = theme;\n\n  if (checked) {\n    return disabled ? semanticColors.disabledBackground : semanticColors.primaryButtonBackgroundPressed;\n  } else if (!checked) {\n    return semanticColors.primaryButtonBorder;\n  }\n\n  return undefined;\n};\n\nconst getLabelColor = (props: IToggleStyleProps) => {\n  const { theme, disabled } = props;\n  const { semanticColors } = theme;\n\n  return disabled ? semanticColors.disabledBodySubtext : semanticColors.inputText;\n};\n\nexport const getToggleStyles = (props: IToggleStyleProps): Partial<IToggleStyles> => {\n  const { theme, disabled } = props;\n  const { semanticColors, effects } = theme;\n\n  return {\n    root: {},\n    label: {\n      color: getLabelColor(props),\n    },\n    thumb: {\n      width: '14px',\n      height: '14px',\n      backgroundColor: disabled ? semanticColors.inputIconDisabled : undefined,\n    },\n    container: {},\n    pill: {\n      backgroundColor: getPillBackgroundColor(props),\n      '&:hover': {\n        backgroundColor: getHoveredPillBackgroundColor(props),\n      },\n      '&:active': {\n        backgroundColor: getPressedPillBackgroundColor(props),\n      },\n      '&:focus&:after': {\n        borderRadius: effects.roundedCorner4,\n        outlineWidth: '2px',\n      },\n    },\n    text: {},\n  };\n};\n"]}