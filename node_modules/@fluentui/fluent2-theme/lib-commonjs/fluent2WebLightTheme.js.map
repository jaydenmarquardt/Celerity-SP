{"version":3,"file":"fluent2WebLightTheme.js","sourceRoot":"../src/","sources":["fluent2WebLightTheme.ts"],"names":[],"mappings":";;;;AACA,yCAA8C;AAG9C,mEAAkE;AAClE,6DAA4D;AAE5D,IAAM,yBAAyB,GAAqB;IAClD,UAAU,EAAE,kEAAkE;IAC9E,UAAU,EAAE,kEAAkE;IAC9E,WAAW,EAAE,mEAAmE;IAChF,WAAW,EAAE,mEAAmE;IAChF,cAAc,EAAE,KAAK;IACrB,cAAc,EAAE,KAAK;IACrB,cAAc,EAAE,KAAK;IACrB,cAAc,EAAE,KAAK;IACrB,mBAAmB,EAAE,KAAK;CAC3B,CAAC;AAEF,6DAA6D;AAC7D,IAAM,MAAM,GAAG,SAAS,CAAC;AACzB,IAAM,MAAM,GAAG,SAAS,CAAC;AACzB,IAAM,MAAM,GAAG,SAAS,CAAC;AAEzB,IAAM,mBAAmB;IACvB,gDAAgD;IAEhD,WAAW,EAAE,SAAS,EACtB,SAAS,EAAE,SAAS,EACpB,YAAY,EAAE,SAAS,EACvB,YAAY,EAAE,SAAS,EACvB,cAAc,EAAE,SAAS,EACzB,aAAa,EAAE,SAAS,EACxB,UAAU,EAAE,SAAS,EACrB,YAAY,EAAE,SAAS,EACvB,eAAe,EAAE,SAAS,EAE1B,KAAK,EAAE,SAAS,EAChB,kBAAkB,EAAE,oBAAoB,EACxC,WAAW,EAAE,SAAS,EACtB,cAAc,EAAE,SAAS,EACzB,iBAAiB,EAAE,SAAS,EAC5B,gBAAgB,EAAE,SAAS,EAC3B,mBAAmB,EAAE,SAAS,EAC9B,eAAe,EAAE,SAAS,EAC1B,kBAAkB,EAAE,SAAS,EAC7B,iBAAiB,EAAE,SAAS,EAC5B,oBAAoB,EAAE,SAAS,EAC/B,YAAY,EAAE,SAAS,EACvB,cAAc,EAAE,SAAS,EACzB,iBAAiB,EAAE,SAAS,EAE5B,MAAM,EAAE,SAAS,EACjB,KAAK,EAAE,SAAS,EAChB,kBAAkB,EAAE,0BAA0B,IAE3C,yCAAmB,CACvB,CAAC;AAEF,IAAM,CAAC,GAAG,mBAAmB,CAAC;AAE9B,IAAM,qCAAqC,GAAqC;IAC9E,iBAAiB;IACjB,sBAAsB,EAAE,CAAC,CAAC,YAAY;IACtC,qBAAqB,EAAE,CAAC,CAAC,cAAc;IAEvC,4BAA4B;IAC5B,4FAA4F;IAC5F,iFAAiF;IACjF,WAAW,EAAE,CAAC,CAAC,eAAe;IAC9B,WAAW,EAAE,CAAC,CAAC,iBAAiB;IAEhC,WAAW;IACX,sBAAsB,EAAE,CAAC,CAAC,YAAY;IACtC,eAAe,EAAE,CAAC,CAAC,KAAK;IACxB,eAAe,EAAE,CAAC,CAAC,cAAc;IACjC,6BAA6B,EAAE,CAAC,CAAC,YAAY;IAE7C,sBAAsB;IACtB,WAAW,EAAE,CAAC,CAAC,cAAc;IAE7B,qBAAqB;IACrB,WAAW,EAAE,CAAC,CAAC,cAAc;IAC7B,WAAW,EAAE,CAAC,CAAC,YAAY;IAC3B,kBAAkB,EAAE,CAAC,CAAC,WAAW;IAEjC,QAAQ,EAAE,CAAC,CAAC,gBAAgB;IAC5B,WAAW,EAAE,CAAC,CAAC,cAAc;IAC7B,cAAc,EAAE,CAAC,CAAC,cAAc;IAEhC,cAAc;IACd,gBAAgB,EAAE,MAAM;IACxB,oBAAoB,EAAE,MAAM;IAC5B,cAAc,EAAE,MAAM;IACtB,YAAY,EAAE,MAAM;CACrB,CAAC;AAEW,QAAA,oBAAoB,GAAW,IAAA,mBAAW,EAAC;IACtD,OAAO,EAAE,mBAAmB;IAC5B,cAAc,EAAE,qCAAqC;IACrD,UAAU,EAAE,+CAAsB;IAClC,OAAO,EAAE,yBAAyB;CACnC,CAAC,CAAC","sourcesContent":["import type { IPalette, ITheme } from '@fluentui/react';\nimport { createTheme } from '@fluentui/react';\nimport { IExtendedEffects, IExtendedSemanticColors } from './types';\n\nimport { fluent2ComponentStyles } from './fluent2ComponentStyles';\nimport { fluent2SharedColors } from './fluent2SharedColors';\n\nconst fluent2ForV8DLightEffects: IExtendedEffects = {\n  elevation4: '0px 2px 4px rgba(0, 0, 0, 0.14), 0px 0px 2px rgba(0, 0, 0, 0.12)',\n  elevation8: '0px 4px 8px rgba(0, 0, 0, 0.14), 0px 0px 2px rgba(0, 0, 0, 0.12)',\n  elevation16: '0px 8px 16px rgba(0, 0, 0, 0.14), 0px 0px 2px rgba(0, 0, 0, 0.12)',\n  elevation64: '0px 32px 64px rgba(0, 0, 0, 0.24), 0px 0px 8px rgba(0, 0, 0, 0.2)',\n  roundedCorner2: '2px',\n  roundedCorner4: '4px',\n  roundedCorner6: '6px',\n  roundedCorner8: '8px',\n  roundedCornerCircle: '50%',\n};\n\n// grays used in semantic slots but don't fit in the palette.\nconst grey38 = '#616161';\nconst grey26 = '#424242';\nconst grey74 = '#BDBDBD';\n\nconst fluent2LightPalette: Partial<IPalette> = {\n  // properties are ordered here as in IPalette.ts\n\n  themeDarker: '#0c3b5e',\n  themeDark: '#0f548c',\n  themeDarkAlt: '#115ea3',\n  themePrimary: '#0f6cbd',\n  themeSecondary: '#2886de', // Required by Fabric palette, only used in ShimmerWave\n  themeTertiary: '#77b7f7',\n  themeLight: '#b4d6fa',\n  themeLighter: '#cfe4fa',\n  themeLighterAlt: '#ebf3fc',\n\n  black: '#000000',\n  blackTranslucent40: 'rgba(0, 0, 0, 0.4)',\n  neutralDark: '#141414',\n  neutralPrimary: '#242424',\n  neutralPrimaryAlt: '#383838',\n  neutralSecondary: '#5c5c5c',\n  neutralSecondaryAlt: '#8a8886',\n  neutralTertiary: '#9e9e9e',\n  neutralTertiaryAlt: '#c7c7c7',\n  neutralQuaternary: '#d1d1d1',\n  neutralQuaternaryAlt: '#e0e0e0',\n  neutralLight: '#ebebeb',\n  neutralLighter: '#f5f5f5',\n  neutralLighterAlt: '#fafafa',\n\n  accent: '#0f6cbd',\n  white: '#FFFFFF',\n  whiteTranslucent40: 'rgba(255 ,255 ,255 ,0.4)',\n\n  ...fluent2SharedColors,\n};\n\nconst p = fluent2LightPalette;\n\nconst semanticColorMappingOverridesForLight: Partial<IExtendedSemanticColors> = {\n  // Extended slots\n  inputBottomBorderFocus: p.themePrimary,\n  inputBottomBorderRest: p.neutralLighter,\n\n  // Base slot mapping changes\n  // focusBorder seems to be used for keyboard focus on components that don't have text input.\n  // inputFocusBorder seems to be used for keyboard focus on text input components.\n  focusBorder: p.neutralTertiary,\n  inputBorder: p.neutralQuaternary,\n\n  // Checkbox\n  inputBackgroundChecked: p.themePrimary,\n  inputBackground: p.white,\n  bodyTextChecked: p.neutralPrimary,\n  inputBackgroundCheckedHovered: p.themeDarkAlt,\n\n  // Errors and warnings\n  warningText: p.neutralPrimary,\n\n  // Message bar colors\n  messageText: p.neutralPrimary,\n  messageLink: p.themeDarkAlt,\n  messageLinkHovered: p.themeDarker,\n\n  infoIcon: p.neutralSecondary,\n  warningIcon: p.neutralPrimary,\n  infoBackground: p.neutralLighter,\n\n  // Grey values\n  inputIconHovered: grey26,\n  inputPlaceholderText: grey38,\n  disabledBorder: grey74,\n  disabledText: grey74,\n};\n\nexport const Fluent2WebLightTheme: ITheme = createTheme({\n  palette: fluent2LightPalette,\n  semanticColors: semanticColorMappingOverridesForLight,\n  components: fluent2ComponentStyles,\n  effects: fluent2ForV8DLightEffects,\n});\n"]}