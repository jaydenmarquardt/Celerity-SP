{"version":3,"file":"chunks/lib-esnext_logic_operations_PnpmSyncCopyOperationPlugin_js.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACiE;AACf;AACE;AACpD;AACO;AACP;AACA;AACA;AACA,oBAAoB,qBAAqB,+BAA+B;AACxE;AACA,2BAA2B,qEAAuB;AAClD,2BAA2B,uEAAyB;AACpD,2BAA2B,kEAAoB;AAC/C;AACA;AACA;AACA,4CAA4C,sBAAsB;AAClE,0BAA0B,2EAAiB;AAC3C,4BAA4B,mBAAmB,QAAQ,sIAEJ;AACnD,0BAA0B,gEAAiB;AAC3C;AACA,sCAAsC,sFAA4B;AAClE,qDAAqD,4EAAkB;AACvE;AACA,qBAAqB;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA","sources":["webpack://@microsoft/rush-lib/./lib-esnext/logic/operations/PnpmSyncCopyOperationPlugin.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\nimport { Async, FileSystem } from '@rushstack/node-core-library';\nimport { pnpmSyncCopyAsync } from 'pnpm-sync-lib';\nimport { OperationStatus } from './OperationStatus';\nconst PLUGIN_NAME = 'PnpmSyncCopyOperationPlugin';\nexport class PnpmSyncCopyOperationPlugin {\n    apply(hooks) {\n        hooks.afterExecuteOperation.tapPromise(PLUGIN_NAME, async (runnerContext) => {\n            const record = runnerContext;\n            const { status, operation: { associatedProject: project } } = record;\n            //skip if the phase is skipped, from cache or no operation\n            if (status === OperationStatus.Skipped ||\n                status === OperationStatus.FromCache ||\n                status === OperationStatus.NoOp) {\n                return;\n            }\n            if (project) {\n                const pnpmSyncJsonPath = `${project.projectFolder}/node_modules/.pnpm-sync.json`;\n                if (await FileSystem.exists(pnpmSyncJsonPath)) {\n                    const { PackageExtractor } = await import(\n                    /* webpackChunkName: 'PackageExtractor' */\n                    '@rushstack/package-extractor');\n                    await pnpmSyncCopyAsync({\n                        pnpmSyncJsonPath,\n                        ensureFolder: FileSystem.ensureFolderAsync,\n                        forEachAsyncWithConcurrency: Async.forEachAsync,\n                        getPackageIncludedFiles: PackageExtractor.getPackageIncludedFilesAsync\n                    });\n                }\n            }\n        });\n    }\n}\n//# sourceMappingURL=PnpmSyncCopyOperationPlugin.js.map"],"names":[],"sourceRoot":""}